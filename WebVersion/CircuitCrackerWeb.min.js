Bridge.assembly("CircuitCrackerWeb",function($asm,globals){"use strict";Bridge.define("CircuitCracker.App",{main:function(){var canvas=document.createElement("canvas");canvas.width=1088;canvas.height=576;canvas.id="monogamecanvas";document.getElementById("game").appendChild(canvas);CircuitCracker.App.game=new CircuitCracker.Game;CircuitCracker.App.game.Run()},statics:{fields:{game:null}}});Bridge.define("CircuitCracker.Game",{inherits:[Microsoft.Xna.Framework.Game],statics:{fields:{world:null,paused:!1,tickTime:0,exit:!1},ctors:{init:function(){this.world=new VelcroPhysics.Dynamics.World(Microsoft.Xna.Framework.Vector2.Zero.$clone());this.paused=!1;this.tickTime=.02}},methods:{Quit:function(){CircuitCracker.Game.exit=!0}}},fields:{graphics:null,spriteBatch:null,lastFixture:null,levelRenderer:null,levelManager:null,wireLogic:null,tilePlacer:null,timeSinceLastTick:0},ctors:{ctor:function(){this.$initialize();Microsoft.Xna.Framework.Game.ctor.call(this);this.Content.RootDirectory="Content";this.graphics=new Microsoft.Xna.Framework.GraphicsDeviceManager(this);this.wireLogic=new CircuitCracker.WireLogic;this.tilePlacer=new CircuitCracker.TilePlacer;this.graphics.IsFullScreen=!1;this.graphics.PreferredBackBufferWidth=1088;this.graphics.PreferredBackBufferHeight=576}},methods:{LoadContent:function(){this.spriteBatch=new Microsoft.Xna.Framework.Graphics.SpriteBatch(this.GraphicsDevice);this.LoadStuff()},LoadStuff:function(){var $step=0,$task1,$jumpFromFinally,path,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=System.Array.min([0,1],$step);switch($step){case 0:$task1=CircuitCracker.GameContent.Init(this.Content);$step=1;$task1.continueWith($asyncBody,!0);return;case 1:$task1.getAwaitedResult();this.levelRenderer=new CircuitCracker.LevelRenderer(this.GraphicsDevice,this.spriteBatch,CircuitCracker.GameContent.Texture.sprites,this.tilePlacer);this.levelManager=new CircuitCracker.LevelManager(this.wireLogic,this.tilePlacer,this.levelRenderer);path="Levels/title screen.level";this.levelManager.LoadLevel(path,!1);return;default:return}}},arguments);$asyncBody()},Update:function(gameTime){var deltaTime,f,hoverEnter,hoverExit,clickable,hoverExit1;CircuitCracker.GameContent.IsLoaded&&(CircuitCracker.Game.exit&&this.Exit(),this.IsActive&&(deltaTime=gameTime.ElapsedGameTime.getTotalSeconds(),CircuitCracker.Input.Update(),CircuitCracker.Input.GetButtonDown(Microsoft.Xna.Framework.Input.Keys.R)&&this.levelManager.ResetLevel(),this.tilePlacer.MousePosValid||CircuitCracker.LevelRenderer.overlayAlpha!==0?this.lastFixture!=null&&(hoverExit1=Bridge.as(this.lastFixture.Body.UserData,CircuitCracker.LevelObjects.IHoverable))!=null&&(hoverExit1.CircuitCracker$LevelObjects$IHoverable$OnMouseExit(),this.lastFixture=null):(f=CircuitCracker.Game.world.TestPoint(CircuitCracker.LevelRenderer.MousePos()),Bridge.referenceEquals(f,this.lastFixture)||(f!=null&&(hoverEnter=Bridge.as(f.Body.UserData,CircuitCracker.LevelObjects.IHoverable))!=null&&hoverEnter.CircuitCracker$LevelObjects$IHoverable$OnMouseEnter(),this.lastFixture!=null&&(hoverExit=Bridge.as(this.lastFixture.Body.UserData,CircuitCracker.LevelObjects.IHoverable))!=null&&hoverExit.CircuitCracker$LevelObjects$IHoverable$OnMouseExit()),this.lastFixture=f,CircuitCracker.Input.GetMouseButtonDown(CircuitCracker.MouseButton.Left)&&f!=null&&(clickable=Bridge.as(f.Body.UserData,CircuitCracker.LevelObjects.IClickable))!=null&&clickable.CircuitCracker$LevelObjects$IClickable$OnClick()),this.tilePlacer.Update(gameTime.TotalGameTime.getTotalSeconds()),this.timeSinceLastTick+=deltaTime,CircuitCracker.Game.paused||(this.timeSinceLastTick+=deltaTime,this.timeSinceLastTick>=CircuitCracker.Game.tickTime&&(this.timeSinceLastTick-=CircuitCracker.Game.tickTime,CircuitCracker.LevelObjects.Moveable.speedModdifier=CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.Space)||CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.LeftShift)?2:1,CircuitCracker.Game.world.Step(deltaTime),this.wireLogic.UpdateWires(),this.levelManager.FixedUpdateObjects()))),Microsoft.Xna.Framework.Game.prototype.Update.call(this,gameTime))},Draw:function(gameTime){if(this.graphics.GraphicsDevice.Clear(Microsoft.Xna.Framework.Color.Black.$clone()),!CircuitCracker.GameContent.IsLoaded){CircuitCracker.GameContent.IsBaseLoaded&&(this.spriteBatch.Begin(),this.spriteBatch.Draw(CircuitCracker.GameContent.Texture.pixel,new Microsoft.Xna.Framework.Rectangle.$ctor2(20,536,Bridge.Int.clip32(1048*(CircuitCracker.GameContent.Counter/18)),20),Microsoft.Xna.Framework.Color.White.$clone()),this.spriteBatch.End());return}this.levelRenderer.DrawWalls();this.levelRenderer.DrawSprites();this.levelRenderer.DrawWires();Microsoft.Xna.Framework.Game.prototype.Draw.call(this,gameTime)}}});Bridge.define("CircuitCracker.GameContent",{statics:{fields:{IsBaseLoaded:!1,IsLoaded:!1,Counter:0},methods:{Init:function(content){var $step=0,$task1,$taskResult1,$task2,$taskResult2,$task3,$taskResult3,$task4,$taskResult4,$task5,$taskResult5,$task6,$taskResult6,$task7,$taskResult7,$task8,$taskResult8,$task9,$taskResult9,$task10,$taskResult10,$task11,$taskResult11,$task12,$taskResult12,$task13,$taskResult13,$task14,$taskResult14,$task15,$taskResult15,$task16,$taskResult16,$task17,$taskResult17,$task18,$taskResult18,$jumpFromFinally,$tcs=new System.Threading.Tasks.TaskCompletionSource,$returnValue,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=System.Array.min([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],$step);switch($step){case 0:CircuitCracker.GameContent.Counter=0;$task1=content.LoadAsync(Microsoft.Xna.Framework.Graphics.Texture2D,"Pixel");$step=1;$task1.continueWith($asyncBody);return;case 1:$taskResult1=$task1.getAwaitedResult();CircuitCracker.GameContent.Texture.pixel=$taskResult1;CircuitCracker.GameContent.IsBaseLoaded=!0;$task2=content.LoadAsync(Microsoft.Xna.Framework.Graphics.Texture2D,"sprites");$step=2;$task2.continueWith($asyncBody);return;case 2:$taskResult2=$task2.getAwaitedResult();CircuitCracker.GameContent.Texture.sprites=$taskResult2;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task3=content.LoadAsync(Microsoft.Xna.Framework.Media.Song,"sounds/song5");$step=3;$task3.continueWith($asyncBody);return;case 3:$taskResult3=$task3.getAwaitedResult();CircuitCracker.GameContent.Songs.song5=$taskResult3;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task4=content.LoadAsync(Microsoft.Xna.Framework.Media.Song,"sounds/song6");$step=4;$task4.continueWith($asyncBody);return;case 4:$taskResult4=$task4.getAwaitedResult();CircuitCracker.GameContent.Songs.song6=$taskResult4;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task5=content.LoadAsync(Microsoft.Xna.Framework.Media.Song,"sounds/song7");$step=5;$task5.continueWith($asyncBody);return;case 5:$taskResult5=$task5.getAwaitedResult();CircuitCracker.GameContent.Songs.song7=$taskResult5;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task6=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/conveyor.wav");$step=6;$task6.continueWith($asyncBody);return;case 6:$taskResult6=$task6.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.conveyor=$taskResult6;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task7=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/door_close.wav");$step=7;$task7.continueWith($asyncBody);return;case 7:$taskResult7=$task7.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.doorClose=$taskResult7;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task8=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/door_open.wav");$step=8;$task8.continueWith($asyncBody);return;case 8:$taskResult8=$task8.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.doorOpen=$taskResult8;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task9=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/laser.wav");$step=9;$task9.continueWith($asyncBody);return;case 9:$taskResult9=$task9.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.laser=$taskResult9;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task10=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/laser_on.wav");$step=10;$task10.continueWith($asyncBody);return;case 10:$taskResult10=$task10.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.laserOn=$taskResult10;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task11=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/piston.wav");$step=11;$task11.continueWith($asyncBody);return;case 11:$taskResult11=$task11.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.piston=$taskResult11;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task12=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/player_death.wav");$step=12;$task12.continueWith($asyncBody);return;case 12:$taskResult12=$task12.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.playerDeath=$taskResult12;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task13=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/pressure_plate.wav");$step=13;$task13.continueWith($asyncBody);return;case 13:$taskResult13=$task13.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.plate=$taskResult13;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task14=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/sensor.wav");$step=14;$task14.continueWith($asyncBody);return;case 14:$taskResult14=$task14.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.sensor=$taskResult14;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task15=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/spike.wav");$step=15;$task15.continueWith($asyncBody);return;case 15:$taskResult15=$task15.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.spike=$taskResult15;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task16=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/teleporter.wav");$step=16;$task16.continueWith($asyncBody);return;case 16:$taskResult16=$task16.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.teleporter=$taskResult16;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task17=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/win.wav");$step=17;$task17.continueWith($asyncBody);return;case 17:$taskResult17=$task17.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.win=$taskResult17;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;$task18=Microsoft.Xna.Framework.Audio.SoundEffect.FromURL("Content/sounds/wooden_chest_death.wav");$step=18;$task18.continueWith($asyncBody);return;case 18:$taskResult18=$task18.getAwaitedResult();CircuitCracker.GameContent.SoundEffects.crateDestroy=$taskResult18;CircuitCracker.GameContent.Counter=CircuitCracker.GameContent.Counter+1|0;CircuitCracker.GameContent.IsLoaded=!0;$tcs.setResult(null);return;default:$tcs.setResult(null);return}}}catch($async_e1){$async_e=System.Exception.create($async_e1);$tcs.setException($async_e)}},arguments);return $asyncBody(),$tcs.task}}}});Bridge.define("CircuitCracker.GameContent.Font",{$kind:"nested class",statics:{fields:{font:null}}});Bridge.define("CircuitCracker.GameContent.Songs",{$kind:"nested class",statics:{fields:{song5:null,song6:null,song7:null}}});Bridge.define("CircuitCracker.GameContent.SoundEffects",{$kind:"nested class",statics:{fields:{conveyor:null,doorClose:null,doorOpen:null,laser:null,laserOn:null,piston:null,playerDeath:null,plate:null,sensor:null,spike:null,teleporter:null,win:null,crateDestroy:null}}});Bridge.define("CircuitCracker.GameContent.Texture",{$kind:"nested class",statics:{fields:{pixel:null,sprites:null}}});Bridge.define("CircuitCracker.Gate",{$kind:"enum",statics:{fields:{None:0,Not:1,And:2,Or:3,Xor:4,Toggle:5}}});Bridge.define("CircuitCracker.Input",{statics:{fields:{mouseState:null,mouseStatePrevious:null,keyboardState:null,keyboardStatePrevious:null},ctors:{init:function(){this.mouseState=new Microsoft.Xna.Framework.Input.MouseState;this.mouseStatePrevious=new Microsoft.Xna.Framework.Input.MouseState;this.keyboardState=new Microsoft.Xna.Framework.Input.KeyboardState;this.keyboardStatePrevious=new Microsoft.Xna.Framework.Input.KeyboardState}},methods:{Update:function(){CircuitCracker.Input.mouseStatePrevious=CircuitCracker.Input.mouseState.$clone();CircuitCracker.Input.keyboardStatePrevious=CircuitCracker.Input.keyboardState.$clone();CircuitCracker.Input.mouseState=Microsoft.Xna.Framework.Input.Mouse.GetState();CircuitCracker.Input.keyboardState=Microsoft.Xna.Framework.Input.Keyboard.GetState()},GetMousePosition:function(){return CircuitCracker.Input.mouseState.Position.$clone()},GetMouseButton:function(button){switch(button){case CircuitCracker.MouseButton.Left:return CircuitCracker.Input.mouseState.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed;case CircuitCracker.MouseButton.Right:return CircuitCracker.Input.mouseState.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed;case CircuitCracker.MouseButton.Middle:return CircuitCracker.Input.mouseState.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed;default:return!1}},GetMouseButtonDown:function(button){switch(button){case CircuitCracker.MouseButton.Left:return CircuitCracker.Input.mouseState.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&CircuitCracker.Input.mouseStatePrevious.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Released;case CircuitCracker.MouseButton.Right:return CircuitCracker.Input.mouseState.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&CircuitCracker.Input.mouseStatePrevious.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Released;case CircuitCracker.MouseButton.Middle:return CircuitCracker.Input.mouseState.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&CircuitCracker.Input.mouseStatePrevious.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Released;default:return!1}},GetMouseButtonUp:function(button){switch(button){case CircuitCracker.MouseButton.Left:return CircuitCracker.Input.mouseState.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Released&&CircuitCracker.Input.mouseStatePrevious.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed;case CircuitCracker.MouseButton.Right:return CircuitCracker.Input.mouseState.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Released&&CircuitCracker.Input.mouseStatePrevious.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed;case CircuitCracker.MouseButton.Middle:return CircuitCracker.Input.mouseState.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Released&&CircuitCracker.Input.mouseStatePrevious.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed;default:return!1}},GetMouseScroll:function(){return CircuitCracker.Input.mouseState.ScrollWheelValue},GetButton:function(key){return CircuitCracker.Input.keyboardState.IsKeyDown(key)},GetButtonDown:function(key){return CircuitCracker.Input.keyboardState.IsKeyDown(key)&&CircuitCracker.Input.keyboardStatePrevious.IsKeyUp(key)},GetButtonUp:function(key){return CircuitCracker.Input.keyboardState.IsKeyUp(key)&&CircuitCracker.Input.keyboardStatePrevious.IsKeyDown(key)}}}});Bridge.define("CircuitCracker.LevelObjects.IHoverable",{$kind:"interface"});Bridge.define("CircuitCracker.LevelObjects.IClickable",{$kind:"interface"});Bridge.define("CircuitCracker.LevelManager",{statics:{fields:{instance:null}},fields:{levelSize:null,levelMap:null,wireLogic:null,tilePlacer:null,levelRenderer:null,menuItems:null,loadedFromId:0,currentLevel:null,previousLevels:null,previousIds:null,linkPaths:null},ctors:{init:function(){this.levelSize=new Microsoft.Xna.Framework.Point;this.levelSize=new Microsoft.Xna.Framework.Point.$ctor2(32,16);this.previousLevels=new(System.Collections.Generic.List$1(System.String).ctor);this.previousIds=new(System.Collections.Generic.List$1(System.Int32).ctor);this.linkPaths=new(System.Collections.Generic.Dictionary$2(System.Int32,System.String))},ctor:function(wireLogic,tilePlacer,levelRenderer){var rtp,x,y;for(this.$initialize(),rtp=null,this.wireLogic=wireLogic,this.tilePlacer=tilePlacer,this.levelRenderer=levelRenderer,this.levelMap=System.Array.create(null,null,CircuitCracker.LevelTile,this.levelSize.$clone().X,this.levelSize.$clone().Y),CircuitCracker.LevelManager.instance=this,rtp=Bridge.fn.bind(this,function(){this.RenderThumbnailPrevious(new Microsoft.Xna.Framework.Point.$ctor2(0,-1))}),this.menuItems=System.Array.init([new CircuitCracker.LevelButton(new Microsoft.Xna.Framework.Point.$ctor2(0,-1),CircuitCracker.Sprites.Back.$clone(),null,Bridge.fn.bind(this,function(){this.LoadPreviousLevel();rtp()}),rtp,Bridge.fn.cacheBind(this,this.HideThumbnail)),new CircuitCracker.LevelButton(new Microsoft.Xna.Framework.Point.$ctor2(3,-1),CircuitCracker.Sprites.Reset.$clone(),"Reset (R)",Bridge.fn.cacheBind(this,this.ResetLevel))],CircuitCracker.LevelButton),x=0;x<this.levelSize.$clone().X;x=x+1|0)for(y=0;y<this.levelSize.$clone().Y;y=y+1|0)this.levelMap.set([x,y],new CircuitCracker.LevelTile(x,y));this.InitLevel()}},methods:{ResetLevel:function(){var $t,tile;this.wireLogic.ResetLogic();$t=Bridge.getEnumerator(this.levelMap);try{while($t.moveNext())tile=$t.Current,tile.obj!=null&&tile.obj.Reset()}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},FixedUpdateObjects:function(){var $t,tile;$t=Bridge.getEnumerator(this.levelMap);try{while($t.moveNext())tile=$t.Current,tile.obj!=null&&tile.obj.enabled&&tile.obj.FixedUpdate()}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},InitLevel:function(){this.tilePlacer.InitTilePlacer(this.levelMap,this.levelSize.$clone(),this.menuItems);this.levelRenderer.InitLevelRenderer(this.levelMap,this.levelSize.$clone());this.wireLogic.InitWireLogic(this.levelMap);this.menuItems[0].SetDisabled(!this.CanLoadPrevious());CircuitCracker.LevelObjects.LevelObject.completed=!1},CompleteLevel:function(){this.CompleteLevelAfter()},CompleteLevelAfter:function(){if(this.CanLoadPrevious()){this.LoadPreviousLevel();var obj=this.levelMap.get([Bridge.Int.div(this.loadedFromId,this.levelSize.$clone().Y)|0,this.loadedFromId%this.levelSize.$clone().Y]).obj,link;(link=Bridge.as(obj,CircuitCracker.LevelObjects.LevelLink))!=null&&link.Complete()}CircuitCracker.Game.paused=!1},LoadLevel:function(path,fromLevel){var stream,name;Bridge.Console.debug(path);stream=new System.IO.FileStream.$ctor1(path,3);try{name=System.String.replaceAll(path,"Levels/","");name=System.String.replaceAll(name,".level","");Bridge.Console.debug("name: "+(name||""));this.LoadLevel$1(stream,name,fromLevel)}finally{Bridge.hasValue(stream)&&stream.System$IDisposable$Dispose()}},LoadLevel$1:function(level,levelname,fromLevel){this.tilePlacer.ClearObjects();this.linkPaths.clear();fromLevel||(this.previousLevels.clear(),this.previousIds.clear());this.currentLevel=levelname;this.levelMap=this.GetLevelMap(level,!0);this.InitLevel()},GetLevelMap:function(level,readLinks){var levelMap=System.Array.create(null,null,CircuitCracker.LevelTile,this.levelSize.$clone().X,this.levelSize.$clone().Y),reader=new System.IO.BinaryReader.ctor(level),x,y,t,combined,nOfLinks,i;try{for(x=0;x<this.levelSize.$clone().X;x=x+1|0)for(y=0;y<this.levelSize.$clone().Y;y=y+1|0){if(t=new CircuitCracker.LevelTile(x,y),t.wire=reader.ReadUInt16(),t.color=reader.ReadUInt16(),t.tmpWire=t.wire,combined=reader.ReadByte(),t.gate=combined>>4,t.wall=(combined>>3&1)!=0,t.objFacing=combined&7,t.objId=reader.ReadSByte(),t.objStorage=reader.ReadUInt16(),t.gate!==CircuitCracker.Gate.None)switch(t.wire&15){case 1:t.gateFacing=0;break;case 2:t.gateFacing=1;break;case 4:t.gateFacing=2;break;case 8:t.gateFacing=3;break}levelMap.set([x,y],t)}if(readLinks&&reader.BaseStream.Position.ne(reader.BaseStream.Length))for(nOfLinks=reader.ReadInt32(),i=0;i<nOfLinks;i=i+1|0)this.linkPaths.add(reader.ReadInt32(),reader.ReadString())}finally{Bridge.hasValue(reader)&&reader.System$IDisposable$Dispose()}return levelMap},UnlockAll:function(unlock){var $t,tile,link;unlock||this.ResetLevel();$t=Bridge.getEnumerator(this.levelMap);try{while($t.moveNext())tile=$t.Current,(link=Bridge.as(tile.obj,CircuitCracker.LevelObjects.LevelLink))!=null&&(unlock?link.Complete():link.Lock())}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},RenderThumbnail$1:function(pos,levelname){},RenderThumbnail:function(pos,positionId){var levelname={};this.linkPaths.tryGetValue(positionId,levelname)&&this.RenderThumbnail$1(pos.$clone(),levelname.v)},RenderThumbnailPrevious:function(pos){this.CanLoadPrevious()&&this.RenderThumbnail$1(pos.$clone(),this.previousLevels.getItem(this.previousLevels.Count-1|0))},HideThumbnail:function(){this.levelRenderer.renderThumbnail=!1},LinkLoadLevel:function(positionId){var levelname,path;this.previousLevels.Count<=500&&(levelname={},this.linkPaths.tryGetValue(positionId,levelname)&&(path="Levels/"+(levelname.v||"")+".level",this.previousLevels.add(this.currentLevel),this.previousIds.add(positionId),this.LoadLevel(path,!0)))},CanLoadPrevious:function(){return this.previousLevels.Count>0},LoadPreviousLevel:function(){var levelname,path;this.previousLevels.Count>0&&(levelname=this.previousLevels.getItem(this.previousLevels.Count-1|0),this.previousLevels.removeAt(this.previousLevels.Count-1|0),this.loadedFromId=this.previousIds.getItem(this.previousIds.Count-1|0),this.previousIds.removeAt(this.previousIds.Count-1|0),path="Levels/"+(levelname||"")+".level",this.LoadLevel(path,!0))},RemoveLink:function(positionId){this.linkPaths.remove(positionId)}}});Bridge.define("CircuitCracker.LevelObjects.LevelObject",{statics:{fields:{completed:!1,facing2rad:0,maxScore:0,nWinBlocks:0,score:0},ctors:{init:function(){this.completed=!1;this.facing2rad=.7853982}}},fields:{placedOn:null,enabled:!1,id:0,sprite:null,collider:null},ctors:{init:function(){this.enabled=!0},ctor:function(placedOn,id,rect){this.$initialize();this.placedOn=placedOn;this.id=id;this.sprite=new CircuitCracker.Sprite.ctor(rect.$clone(),placedOn.pos.$clone(),placedOn.objFacing,1)}},methods:{FixedUpdate:function(){},EditorInit:function(){},Reset:function(){this.enabled=!0},Destroy:function(){this.collider!=null&&CircuitCracker.Game.world.RemoveBody(this.collider);this.sprite.Remove()},CheckWin:function(clicked){CircuitCracker.LevelObjects.LevelObject.score!==CircuitCracker.LevelObjects.LevelObject.maxScore||CircuitCracker.LevelObjects.LevelObject.completed||(CircuitCracker.LevelObjects.LevelObject.completed=!0);CircuitCracker.LevelObjects.LevelObject.completed&&(CircuitCracker.LevelObjects.LevelObject.nWinBlocks===0||clicked)&&(CircuitCracker.LevelObjects.LevelObject.completed=!1,CircuitCracker.LevelManager.instance.CompleteLevel())},FacingDirection:function(){switch(this.placedOn.objFacing){case 0:return Microsoft.Xna.Framework.Vector2.op_UnaryNegation(Microsoft.Xna.Framework.Vector2.UnitY.$clone());case 2:return Microsoft.Xna.Framework.Vector2.UnitX.$clone();case 4:return Microsoft.Xna.Framework.Vector2.UnitY.$clone();case 6:return Microsoft.Xna.Framework.Vector2.op_UnaryNegation(Microsoft.Xna.Framework.Vector2.UnitX.$clone());default:return Microsoft.Xna.Framework.Vector2.Zero.$clone()}}}});Bridge.define("CircuitCracker.LevelObjects.ITeleportable",{$kind:"interface"});Bridge.define("CircuitCracker.LevelObjects.ILaserhitable",{$kind:"interface"});Bridge.define("CircuitCracker.LevelObjects.IDamageable",{$kind:"interface"});Bridge.define("CircuitCracker.LevelRenderer",{statics:{fields:{facing2rad:0,debugProjection:null,transform:null,inverseTransform:null,sprites:null,overlaySprites:null,overlayAlpha:0,vertBuffer:null,drawPolygon:!1,colors:null},ctors:{init:function(){this.debugProjection=new Microsoft.Xna.Framework.Matrix;this.transform=new Microsoft.Xna.Framework.Matrix;this.inverseTransform=new Microsoft.Xna.Framework.Matrix;this.facing2rad=1.57079637;this.vertBuffer=System.Array.init(3,function(){return new Microsoft.Xna.Framework.Graphics.VertexPositionColor},Microsoft.Xna.Framework.Graphics.VertexPositionColor);this.colors=System.Array.init([new Microsoft.Xna.Framework.Color.$ctor6(16,161,255),new Microsoft.Xna.Framework.Color.$ctor6(39,190,40),new Microsoft.Xna.Framework.Color.$ctor6(247,221,61),new Microsoft.Xna.Framework.Color.$ctor6(255,163,37),new Microsoft.Xna.Framework.Color.$ctor6(255,42,42),new Microsoft.Xna.Framework.Color.$ctor6(255,138,188),new Microsoft.Xna.Framework.Color.$ctor6(24,228,200),new Microsoft.Xna.Framework.Color.$ctor6(150,130,255),new Microsoft.Xna.Framework.Color.$ctor7(6,64,100,127),new Microsoft.Xna.Framework.Color.$ctor7(15,75,15,127),new Microsoft.Xna.Framework.Color.$ctor7(96,86,24,127),new Microsoft.Xna.Framework.Color.$ctor7(100,64,15,127),new Microsoft.Xna.Framework.Color.$ctor7(100,16,16,127),new Microsoft.Xna.Framework.Color.$ctor7(100,54,74,127),new Microsoft.Xna.Framework.Color.$ctor7(10,69,59,127),new Microsoft.Xna.Framework.Color.$ctor7(50,30,80,127)],Microsoft.Xna.Framework.Color)}},methods:{MousePos:function(){var mousePos=CircuitCracker.Input.GetMousePosition();return Microsoft.Xna.Framework.Vector2.Transform(mousePos.ToVector2(),CircuitCracker.LevelRenderer.inverseTransform.$clone())},WorldToScreenPos:function(pos){return Microsoft.Xna.Framework.Vector2.Transform(pos.$clone(),CircuitCracker.LevelRenderer.transform.$clone())},AddSprite:function(sprite){sprite.SortOrder<.5?CircuitCracker.LevelRenderer.overlaySprites[sprite.ShaderId].add(sprite):CircuitCracker.LevelRenderer.sprites[sprite.ShaderId].add(sprite)},RemoveSprite:function(sprite){return sprite.SortOrder<.5?CircuitCracker.LevelRenderer.overlaySprites[sprite.ShaderId].remove(sprite):CircuitCracker.LevelRenderer.sprites[sprite.ShaderId].remove(sprite)},SetPolygonVerts:function(vertPositions){},HidePolygon:function(){}}},fields:{origin:null,renderThumbnail:!1,device:null,spriteBatch:null,spriteTex:null,effects:null,tilePlacer:null,levelMap:null,levelSize:null,thumbnail:null,thumbnailRect:null,basicEffect:null,indBuffer:null,wireWallToSprite:null,wallRects:null,wireRects:null,gateRects:null},ctors:{init:function(){this.origin=new Microsoft.Xna.Framework.Vector2;this.levelSize=new Microsoft.Xna.Framework.Point;this.thumbnailRect=new Microsoft.Xna.Framework.Rectangle;this.origin=new Microsoft.Xna.Framework.Vector2.$ctor2(16,16);this.indBuffer=System.Array.init([0,2,1],System.Int16);this.wireWallToSprite=System.Array.init([new Microsoft.Xna.Framework.Vector2.$ctor2(0,0),new Microsoft.Xna.Framework.Vector2.$ctor2(1,0),new Microsoft.Xna.Framework.Vector2.$ctor2(1,1.57079637),new Microsoft.Xna.Framework.Vector2.$ctor2(2,0),new Microsoft.Xna.Framework.Vector2.$ctor2(1,3.14159274),new Microsoft.Xna.Framework.Vector2.$ctor2(3,0),new Microsoft.Xna.Framework.Vector2.$ctor2(2,1.57079637),new Microsoft.Xna.Framework.Vector2.$ctor2(4,0),new Microsoft.Xna.Framework.Vector2.$ctor2(1,4.712389),new Microsoft.Xna.Framework.Vector2.$ctor2(2,4.712389),new Microsoft.Xna.Framework.Vector2.$ctor2(3,4.712389),new Microsoft.Xna.Framework.Vector2.$ctor2(4,4.712389),new Microsoft.Xna.Framework.Vector2.$ctor2(2,3.14159274),new Microsoft.Xna.Framework.Vector2.$ctor2(4,3.14159274),new Microsoft.Xna.Framework.Vector2.$ctor2(4,1.57079637),new Microsoft.Xna.Framework.Vector2.$ctor2(5,0),new Microsoft.Xna.Framework.Vector2.$ctor2(6,4.712389)],Microsoft.Xna.Framework.Vector2);this.wallRects=System.Array.init([CircuitCracker.Sprites.Wall5.$clone(),CircuitCracker.Sprites.Wall0.$clone(),CircuitCracker.Sprites.Wall1.$clone(),CircuitCracker.Sprites.Wall2.$clone(),CircuitCracker.Sprites.Wall3.$clone(),CircuitCracker.Sprites.Wall4.$clone(),CircuitCracker.Sprites.Floor.$clone()],Microsoft.Xna.Framework.Rectangle);this.wireRects=System.Array.init([CircuitCracker.Sprites.None.$clone(),CircuitCracker.Sprites.Wire0.$clone(),CircuitCracker.Sprites.Wire1.$clone(),CircuitCracker.Sprites.Wire2.$clone(),CircuitCracker.Sprites.Wire3.$clone(),CircuitCracker.Sprites.Wire4.$clone(),CircuitCracker.Sprites.Wire5.$clone()],Microsoft.Xna.Framework.Rectangle);this.gateRects=System.Array.init([CircuitCracker.Sprites.None.$clone(),CircuitCracker.Sprites.Not.$clone(),CircuitCracker.Sprites.And.$clone(),CircuitCracker.Sprites.Or.$clone(),CircuitCracker.Sprites.Xor.$clone(),CircuitCracker.Sprites.Toggle.$clone()],Microsoft.Xna.Framework.Rectangle)},ctor:function(device,spriteBatch,spriteTex,tilePlacer){this.$initialize();this.device=device;this.spriteBatch=spriteBatch;this.spriteTex=spriteTex;this.tilePlacer=tilePlacer;this.effects=System.Array.init(1,null,Microsoft.Xna.Framework.Graphics.Effect);CircuitCracker.LevelRenderer.overlaySprites=System.Array.init(this.effects.length,null,System.Collections.Generic.List$1(CircuitCracker.Sprite));CircuitCracker.LevelRenderer.sprites=System.Array.init(this.effects.length,null,System.Collections.Generic.List$1(CircuitCracker.Sprite));for(var i=0;i<this.effects.length;i=i+1|0)CircuitCracker.LevelRenderer.overlaySprites[i]=new(System.Collections.Generic.List$1(CircuitCracker.Sprite).ctor),CircuitCracker.LevelRenderer.sprites[i]=new(System.Collections.Generic.List$1(CircuitCracker.Sprite).ctor);this.basicEffect=new Microsoft.Xna.Framework.Graphics.BasicEffect.$ctor1(device);this.basicEffect.Alpha=.25;this.thumbnail=new Microsoft.Xna.Framework.Graphics.RenderTarget2D.ctor(device,272,144);this.Resize(1088,576)}},methods:{InitLevelRenderer:function(levelMap,levelSize){this.levelMap=levelMap;this.levelSize=levelSize.$clone()},Resize:function(width,height){var scale=Microsoft.Xna.Framework.Vector3.One.$clone(),translate=Microsoft.Xna.Framework.Vector3.Zero.$clone(),aspect=1.88888884,nScale,m;width/height<aspect?(scale.X=width,scale.Y=width/aspect):(scale.X=height*aspect,scale.Y=height);nScale=new Microsoft.Xna.Framework.Vector3.$ctor3(scale.X/this.device.Viewport.Width,scale.Y/this.device.Viewport.Height,0);translate.X=Bridge.Int.clip32((this.device.Viewport.Width-scale.X)/2+scale.X/34*1.5)+.5;translate.Y=Bridge.Int.clip32((this.device.Viewport.Height-scale.Y)/2+scale.Y/18*1.5)+.5;CircuitCracker.LevelRenderer.transform=Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix.CreateOrthographic(34,18,0,-1),Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3.op_Division$1(scale.$clone(),2)));CircuitCracker.LevelRenderer.transform.Translation=translate.$clone();CircuitCracker.LevelRenderer.inverseTransform=Microsoft.Xna.Framework.Matrix.Invert(CircuitCracker.LevelRenderer.transform.$clone());m=Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix.CreateOrthographic(34,18,0,-1),Microsoft.Xna.Framework.Matrix.CreateScale(nScale.$clone()));m.Translation=Microsoft.Xna.Framework.Vector3.op_UnaryNegation(nScale.$clone());this.basicEffect.World=m.$clone();CircuitCracker.LevelRenderer.debugProjection=Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix.CreateOrthographic(34,18,0,-1),Microsoft.Xna.Framework.Matrix.CreateScale$2(nScale.X,-nScale.Y,nScale.Z));CircuitCracker.LevelRenderer.debugProjection.Translation=new Microsoft.Xna.Framework.Vector3.$ctor3(-nScale.X+nScale.X/11.3,nScale.Y-nScale.Y/6,0)},SetThumbnailPos:function(pos){this.thumbnailRect=new Microsoft.Xna.Framework.Rectangle.$ctor2(pos.X,pos.Y,this.thumbnail.Width,this.thumbnail.Height)},DrawOverlays:function(time){(CircuitCracker.LevelRenderer.overlayAlpha>0||this.renderThumbnail)&&(this.spriteBatch.Begin(0,void 0,Microsoft.Xna.Framework.Graphics.SamplerState.PointWrap,void 0,void 0,void 0,void 0),this.renderThumbnail&&this.spriteBatch.Draw(this.thumbnail,this.thumbnailRect.$clone(),Microsoft.Xna.Framework.Color.White.$clone()),this.spriteBatch.Draw$1(this.spriteTex,this.device.Viewport.Bounds.$clone(),CircuitCracker.Sprites.Box.$clone(),new Microsoft.Xna.Framework.Color.$ctor2(Microsoft.Xna.Framework.Color.Black.$clone(),CircuitCracker.LevelRenderer.overlayAlpha)),this.spriteBatch.End())},DrawSprites:function(){for(var s,$t,i=0;i<this.effects.length;i=i+1|0)if(CircuitCracker.LevelRenderer.sprites[i].Count>0){this.spriteBatch.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode.BackToFront,void 0,Microsoft.Xna.Framework.Graphics.SamplerState.PointWrap,void 0,void 0,void 0,CircuitCracker.LevelRenderer.transform);$t=Bridge.getEnumerator(CircuitCracker.LevelRenderer.sprites[i]);try{while($t.moveNext())s=$t.Current,this.spriteBatch.Draw$5(this.spriteTex,s.position.$clone(),s.rect.$clone(),s.color.$clone(),s.rotation,this.origin.$clone(),s.scale.$clone(),s.effects,s.SortOrder)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.spriteBatch.End()}},DrawWalls:function(){var x,y,destRect,wall,st;for(this.spriteBatch.Begin(0,void 0,Microsoft.Xna.Framework.Graphics.SamplerState.PointWrap,void 0,void 0,void 0,CircuitCracker.LevelRenderer.transform),x=0;x<(this.levelSize.X+2|0);x=x+1|0)for(y=0;y<(this.levelSize.Y+2|0);y=y+1|0)destRect=new Microsoft.Xna.Framework.Rectangle.$ctor2(x-1|0,y-1|0,1,1),wall=this.tilePlacer.walls.get([x,y]),wall<0&&(wall=16),st=this.wireWallToSprite[wall].$clone(),this.spriteBatch.Draw$2(this.spriteTex,destRect.$clone(),this.wallRects[Bridge.Int.clip32(st.X)].$clone(),Microsoft.Xna.Framework.Color.White.$clone(),st.Y,this.origin.$clone(),Microsoft.Xna.Framework.Graphics.SpriteEffects.None,0);this.spriteBatch.End()},DrawWires:function(){var x,y,destRect,tile,i,wire,color,c,st,gate,c1;for(this.spriteBatch.Begin(0,void 0,Microsoft.Xna.Framework.Graphics.SamplerState.PointWrap,void 0,void 0,void 0,CircuitCracker.LevelRenderer.transform),x=0;x<this.levelSize.X;x=x+1|0)for(y=0;y<this.levelSize.Y;y=y+1|0){for(destRect=new Microsoft.Xna.Framework.Rectangle.$ctor2(x,y,1,1),tile=this.levelMap.get([x,y]),i=0;i<4;i=i+1|0)(wire=tile.wire>>Bridge.Int.mul(4,i)&15,color=tile.color>>Bridge.Int.mul(3,i)&7,wire!==0)&&(tile.wire===165&&wire===10&&(wire=16),c=CircuitCracker.LevelRenderer.colors[tile.signalStrength[i]>0?color:color+8|0].$clone(),st=this.wireWallToSprite[wire].$clone(),this.spriteBatch.Draw$2(this.spriteTex,destRect.$clone(),this.wireRects[Bridge.Int.clip32(st.X)].$clone(),c.$clone(),st.Y,this.origin.$clone(),Microsoft.Xna.Framework.Graphics.SpriteEffects.None,0));gate=tile.gate;gate>0&&(c1=tile.signalStrength[0]===1?Microsoft.Xna.Framework.Color.White:new Microsoft.Xna.Framework.Color.$ctor7(40,40,40,127),this.spriteBatch.Draw$2(this.spriteTex,destRect.$clone(),this.gateRects[gate].$clone(),c1.$clone(),tile.gateFacing*CircuitCracker.LevelRenderer.facing2rad,this.origin.$clone(),Microsoft.Xna.Framework.Graphics.SpriteEffects.None,0))}this.spriteBatch.End()}}});Bridge.define("CircuitCracker.LevelTile",{fields:{pos:null,wire:0,color:0,gate:0,gateFacing:0,objId:0,objFacing:0,objStorage:0,wall:!1,obj:null,source:!1,signalStrength:null,nextStrength:null,minNearStrength:null,tmpWire:0,lastLayerAdded:0},ctors:{init:function(){this.pos=new Microsoft.Xna.Framework.Point;this.objId=-1;this.signalStrength=System.Array.init(new Int32Array(4),System.Int32);this.nextStrength=System.Array.init(new Int32Array(4),System.Int32);this.minNearStrength=System.Array.init(new Int32Array(4),System.Int32)},ctor:function(x,y){this.$initialize();this.pos=new Microsoft.Xna.Framework.Point.$ctor2(x,y)}},methods:{DestroyObject:function(){this.obj!=null?this.obj.Destroy():null;this.objId=-1;this.objFacing=0;this.objStorage=0;this.obj=null},HasWire:function(position){return this.GetWireLayer(position)!==-1},HasWire$1:function(position,layer){return this.GetWireLayer(position)===layer},GetWireLayer:function(position){switch(this.wire>>position&4369){case 1:return 0;case 16:return 1;case 256:return 2;case 4096:return 3;default:return-1}},ClearWire:function(position){this.wire=this.wire&~(4369<<position);this.tmpWire=this.wire},GetTmpLayer:function(layer){return this.tmpWire>>Bridge.Int.mul(4,layer)&15},CombineLayers:function(){this.tmpWire=(this.tmpWire|this.tmpWire>>4|this.tmpWire>>8|this.tmpWire>>12)&15;this.lastLayerAdded=0},GetCombinedLayers:function(){return(this.tmpWire|this.tmpWire>>4|this.tmpWire>>8|this.tmpWire>>12)&15},AddTmpLayer:function(layer){for(var i=0;i<4;i=i+1|0)if(this.GetTmpLayer(i)===0){this.tmpWire=this.tmpWire|layer<<Bridge.Int.mul(4,i);this.lastLayerAdded=i;return}},SetColor:function(layer,color){this.color=this.color&~(7<<Bridge.Int.mul(3,layer));this.color=this.color|color<<Bridge.Int.mul(3,layer)},GetColor:function(layer){return this.color>>Bridge.Int.mul(3,layer)&7},SetObjectColor:function(color){this.SetColor(4,color)},GetObjectColor:function(){return this.GetColor(4)}}});Bridge.define("CircuitCracker.Mode",{$kind:"enum",statics:{fields:{Wire:0,Gate:1,Wall:2,Object:3}}});Bridge.define("CircuitCracker.MouseButton",{$kind:"enum",statics:{fields:{Left:0,Right:1,Middle:2}}});Bridge.define("CircuitCracker.PlacerMode",{fields:{mode:0,sprite:null,decalSprite:null,id:0,canRotate:!1},ctors:{init:function(){this.sprite=new Microsoft.Xna.Framework.Rectangle;this.decalSprite=new Microsoft.Xna.Framework.Rectangle},ctor:function(mode,sprite,id,canRotate,decalSprite){decalSprite===void 0&&(decalSprite=null);this.$initialize();this.mode=mode;this.sprite=sprite.$clone();this.id=id;this.canRotate=canRotate;this.decalSprite=System.Nullable.getValueOrDefault(decalSprite,new Microsoft.Xna.Framework.Rectangle).$clone()}}});Bridge.define("CircuitCracker.Shader",{$kind:"enum",statics:{fields:{None:0,Invert:1,Dissolve:2,Materialize:3,Teleport:4,Ants:5}}});Bridge.define("CircuitCracker.Sprite",{statics:{fields:{facing2rad:0},ctors:{init:function(){this.facing2rad=.7853982}}},fields:{rect:null,color:null,scale:null,position:null,effects:0,rotation:0,SortOrder:0,ShaderId:0,enabled:!1},ctors:{init:function(){this.rect=new Microsoft.Xna.Framework.Rectangle;this.color=new Microsoft.Xna.Framework.Color;this.scale=new Microsoft.Xna.Framework.Vector2;this.position=new Microsoft.Xna.Framework.Vector2;this.color=Microsoft.Xna.Framework.Color.White.$clone();this.scale=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.One.$clone(),32);this.enabled=!0},ctor:function(rect,tilePos,facing,sortOrder,color){color===void 0&&(color=new Microsoft.Xna.Framework.Color);CircuitCracker.Sprite.$ctor1.call(this,rect,tilePos.ToVector2(),facing*CircuitCracker.Sprite.facing2rad,sortOrder,color)},$ctor1:function(rect,position,rotation,sortOrder,color){color===void 0&&(color=new Microsoft.Xna.Framework.Color);this.$initialize();this.rect=rect.$clone();this.position=position.$clone();this.rotation=rotation;this.SortOrder=sortOrder;CircuitCracker.LevelRenderer.AddSprite(this)}},methods:{Remove:function(){CircuitCracker.LevelRenderer.RemoveSprite(this)},SetEnabled:function(enabled){this.enabled!==enabled&&(this.enabled=enabled,enabled?CircuitCracker.LevelRenderer.AddSprite(this):CircuitCracker.LevelRenderer.RemoveSprite(this))},SetSortOrder:function(sortOrder){var removed=CircuitCracker.LevelRenderer.RemoveSprite(this);this.SortOrder=CircuitCracker.Utilities.Clamp$1(sortOrder,0,1);removed&&CircuitCracker.LevelRenderer.AddSprite(this)},SetShader:function(shader){var removed=CircuitCracker.LevelRenderer.RemoveSprite(this);this.ShaderId=shader;removed&&CircuitCracker.LevelRenderer.AddSprite(this)}}});Bridge.define("CircuitCracker.Sprites",{statics:{fields:{None:null,Wall0:null,Wall1:null,Wall2:null,Wall3:null,Wall4:null,Wall5:null,Floor:null,Wire0:null,Wire1:null,Wire2:null,Wire3:null,Wire4:null,Wire5:null,Not:null,And:null,Or:null,Xor:null,Toggle:null,Box:null,SelectBorder:null,Circle:null,Door0:null,Door1:null,Door2:null,Door3:null,PlateActive:null,PlateInactive:null,CrateNormal:null,CrateMetal:null,PlayerWalking0:null,PlayerWalking1:null,PlayerPushing0:null,PlayerPushing1:null,InversePlayer:null,Goal:null,Conveyor:null,SpikeActive:null,SpikeInactive:null,Laser0:null,Laser1:null,Laser2:null,Laser3:null,DetectorActive:null,DetectorInactive:null,WinblockActive:null,WinblockInactive:null,TeleporterActive:null,TeleporterInactive:null,Robot:null,RobotDecal:null,RobotBase:null,RobotSensor:null,RobotSensorDecal:null,PistonBody:null,PistonHead:null,LevelLinkLocked:null,LevelLinkUnlocked:null,LevelLinkComplete:null,Exit:null,Back:null,Reset:null,Options:null,MessageBox:null},ctors:{init:function(){this.None=new Microsoft.Xna.Framework.Rectangle;this.Wall0=new Microsoft.Xna.Framework.Rectangle;this.Wall1=new Microsoft.Xna.Framework.Rectangle;this.Wall2=new Microsoft.Xna.Framework.Rectangle;this.Wall3=new Microsoft.Xna.Framework.Rectangle;this.Wall4=new Microsoft.Xna.Framework.Rectangle;this.Wall5=new Microsoft.Xna.Framework.Rectangle;this.Floor=new Microsoft.Xna.Framework.Rectangle;this.Wire0=new Microsoft.Xna.Framework.Rectangle;this.Wire1=new Microsoft.Xna.Framework.Rectangle;this.Wire2=new Microsoft.Xna.Framework.Rectangle;this.Wire3=new Microsoft.Xna.Framework.Rectangle;this.Wire4=new Microsoft.Xna.Framework.Rectangle;this.Wire5=new Microsoft.Xna.Framework.Rectangle;this.Not=new Microsoft.Xna.Framework.Rectangle;this.And=new Microsoft.Xna.Framework.Rectangle;this.Or=new Microsoft.Xna.Framework.Rectangle;this.Xor=new Microsoft.Xna.Framework.Rectangle;this.Toggle=new Microsoft.Xna.Framework.Rectangle;this.Box=new Microsoft.Xna.Framework.Rectangle;this.SelectBorder=new Microsoft.Xna.Framework.Rectangle;this.Circle=new Microsoft.Xna.Framework.Rectangle;this.Door0=new Microsoft.Xna.Framework.Rectangle;this.Door1=new Microsoft.Xna.Framework.Rectangle;this.Door2=new Microsoft.Xna.Framework.Rectangle;this.Door3=new Microsoft.Xna.Framework.Rectangle;this.PlateActive=new Microsoft.Xna.Framework.Rectangle;this.PlateInactive=new Microsoft.Xna.Framework.Rectangle;this.CrateNormal=new Microsoft.Xna.Framework.Rectangle;this.CrateMetal=new Microsoft.Xna.Framework.Rectangle;this.PlayerWalking0=new Microsoft.Xna.Framework.Rectangle;this.PlayerWalking1=new Microsoft.Xna.Framework.Rectangle;this.PlayerPushing0=new Microsoft.Xna.Framework.Rectangle;this.PlayerPushing1=new Microsoft.Xna.Framework.Rectangle;this.InversePlayer=new Microsoft.Xna.Framework.Rectangle;this.Goal=new Microsoft.Xna.Framework.Rectangle;this.Conveyor=new Microsoft.Xna.Framework.Rectangle;this.SpikeActive=new Microsoft.Xna.Framework.Rectangle;this.SpikeInactive=new Microsoft.Xna.Framework.Rectangle;this.Laser0=new Microsoft.Xna.Framework.Rectangle;this.Laser1=new Microsoft.Xna.Framework.Rectangle;this.Laser2=new Microsoft.Xna.Framework.Rectangle;this.Laser3=new Microsoft.Xna.Framework.Rectangle;this.DetectorActive=new Microsoft.Xna.Framework.Rectangle;this.DetectorInactive=new Microsoft.Xna.Framework.Rectangle;this.WinblockActive=new Microsoft.Xna.Framework.Rectangle;this.WinblockInactive=new Microsoft.Xna.Framework.Rectangle;this.TeleporterActive=new Microsoft.Xna.Framework.Rectangle;this.TeleporterInactive=new Microsoft.Xna.Framework.Rectangle;this.Robot=new Microsoft.Xna.Framework.Rectangle;this.RobotDecal=new Microsoft.Xna.Framework.Rectangle;this.RobotBase=new Microsoft.Xna.Framework.Rectangle;this.RobotSensor=new Microsoft.Xna.Framework.Rectangle;this.RobotSensorDecal=new Microsoft.Xna.Framework.Rectangle;this.PistonBody=new Microsoft.Xna.Framework.Rectangle;this.PistonHead=new Microsoft.Xna.Framework.Rectangle;this.LevelLinkLocked=new Microsoft.Xna.Framework.Rectangle;this.LevelLinkUnlocked=new Microsoft.Xna.Framework.Rectangle;this.LevelLinkComplete=new Microsoft.Xna.Framework.Rectangle;this.Exit=new Microsoft.Xna.Framework.Rectangle;this.Back=new Microsoft.Xna.Framework.Rectangle;this.Reset=new Microsoft.Xna.Framework.Rectangle;this.Options=new Microsoft.Xna.Framework.Rectangle;this.MessageBox=new Microsoft.Xna.Framework.Rectangle;this.None=Microsoft.Xna.Framework.Rectangle.Empty.$clone();this.Wall0=new Microsoft.Xna.Framework.Rectangle.$ctor2(0,64,32,32);this.Wall1=new Microsoft.Xna.Framework.Rectangle.$ctor2(32,64,32,32);this.Wall2=new Microsoft.Xna.Framework.Rectangle.$ctor2(64,64,32,32);this.Wall3=new Microsoft.Xna.Framework.Rectangle.$ctor2(96,64,32,32);this.Wall4=new Microsoft.Xna.Framework.Rectangle.$ctor2(128,64,32,32);this.Wall5=new Microsoft.Xna.Framework.Rectangle.$ctor2(160,64,32,32);this.Floor=new Microsoft.Xna.Framework.Rectangle.$ctor2(0,96,32,32);this.Wire0=new Microsoft.Xna.Framework.Rectangle.$ctor2(0,32,32,32);this.Wire1=new Microsoft.Xna.Framework.Rectangle.$ctor2(32,32,32,32);this.Wire2=new Microsoft.Xna.Framework.Rectangle.$ctor2(64,32,32,32);this.Wire3=new Microsoft.Xna.Framework.Rectangle.$ctor2(96,32,32,32);this.Wire4=new Microsoft.Xna.Framework.Rectangle.$ctor2(128,32,32,32);this.Wire5=new Microsoft.Xna.Framework.Rectangle.$ctor2(160,32,32,32);this.Not=new Microsoft.Xna.Framework.Rectangle.$ctor2(192,32,32,32);this.And=new Microsoft.Xna.Framework.Rectangle.$ctor2(192,64,32,32);this.Or=new Microsoft.Xna.Framework.Rectangle.$ctor2(224,32,32,32);this.Xor=new Microsoft.Xna.Framework.Rectangle.$ctor2(224,64,32,32);this.Toggle=new Microsoft.Xna.Framework.Rectangle.$ctor2(224,96,32,32);this.Box=new Microsoft.Xna.Framework.Rectangle.$ctor2(64,224,32,32);this.SelectBorder=new Microsoft.Xna.Framework.Rectangle.$ctor2(96,224,32,32);this.Circle=new Microsoft.Xna.Framework.Rectangle.$ctor2(128,224,32,32);this.Door0=new Microsoft.Xna.Framework.Rectangle.$ctor2(192,96,32,32);this.Door1=new Microsoft.Xna.Framework.Rectangle.$ctor2(160,96,32,32);this.Door2=new Microsoft.Xna.Framework.Rectangle.$ctor2(128,96,32,32);this.Door3=new Microsoft.Xna.Framework.Rectangle.$ctor2(96,96,32,32);this.PlateActive=new Microsoft.Xna.Framework.Rectangle.$ctor2(64,96,32,32);this.PlateInactive=new Microsoft.Xna.Framework.Rectangle.$ctor2(32,96,32,32);this.CrateNormal=new Microsoft.Xna.Framework.Rectangle.$ctor2(0,128,32,32);this.CrateMetal=new Microsoft.Xna.Framework.Rectangle.$ctor2(32,128,32,32);this.PlayerWalking0=new Microsoft.Xna.Framework.Rectangle.$ctor2(64,160,32,32);this.PlayerWalking1=new Microsoft.Xna.Framework.Rectangle.$ctor2(96,160,32,32);this.PlayerPushing0=new Microsoft.Xna.Framework.Rectangle.$ctor2(128,160,32,32);this.PlayerPushing1=new Microsoft.Xna.Framework.Rectangle.$ctor2(160,160,32,32);this.InversePlayer=new Microsoft.Xna.Framework.Rectangle.$ctor2(192,160,32,32);this.Goal=new Microsoft.Xna.Framework.Rectangle.$ctor2(64,192,32,32);this.Conveyor=new Microsoft.Xna.Framework.Rectangle.$ctor2(32,160,32,32);this.SpikeActive=new Microsoft.Xna.Framework.Rectangle.$ctor2(96,192,32,32);this.SpikeInactive=new Microsoft.Xna.Framework.Rectangle.$ctor2(128,192,32,32);this.Laser0=new Microsoft.Xna.Framework.Rectangle.$ctor2(64,128,32,32);this.Laser1=new Microsoft.Xna.Framework.Rectangle.$ctor2(96,128,32,32);this.Laser2=new Microsoft.Xna.Framework.Rectangle.$ctor2(128,128,32,32);this.Laser3=new Microsoft.Xna.Framework.Rectangle.$ctor2(160,128,32,32);this.DetectorActive=new Microsoft.Xna.Framework.Rectangle.$ctor2(224,128,32,32);this.DetectorInactive=new Microsoft.Xna.Framework.Rectangle.$ctor2(192,128,32,32);this.WinblockActive=new Microsoft.Xna.Framework.Rectangle.$ctor2(64,0,32,32);this.WinblockInactive=new Microsoft.Xna.Framework.Rectangle.$ctor2(32,0,32,32);this.TeleporterActive=new Microsoft.Xna.Framework.Rectangle.$ctor2(160,192,32,32);this.TeleporterInactive=new Microsoft.Xna.Framework.Rectangle.$ctor2(192,192,32,32);this.Robot=new Microsoft.Xna.Framework.Rectangle.$ctor2(224,160,32,32);this.RobotDecal=new Microsoft.Xna.Framework.Rectangle.$ctor2(224,192,32,32);this.RobotBase=new Microsoft.Xna.Framework.Rectangle.$ctor2(224,224,32,32);this.RobotSensor=new Microsoft.Xna.Framework.Rectangle.$ctor2(160,224,32,32);this.RobotSensorDecal=new Microsoft.Xna.Framework.Rectangle.$ctor2(192,224,32,32);this.PistonBody=new Microsoft.Xna.Framework.Rectangle.$ctor2(0,192,32,32);this.PistonHead=new Microsoft.Xna.Framework.Rectangle.$ctor2(0,160,32,32);this.LevelLinkLocked=new Microsoft.Xna.Framework.Rectangle.$ctor2(96,0,32,32);this.LevelLinkUnlocked=new Microsoft.Xna.Framework.Rectangle.$ctor2(128,0,32,32);this.LevelLinkComplete=new Microsoft.Xna.Framework.Rectangle.$ctor2(160,0,32,32);this.Exit=new Microsoft.Xna.Framework.Rectangle.$ctor2(192,0,32,32);this.Back=new Microsoft.Xna.Framework.Rectangle.$ctor2(224,0,32,32);this.Reset=new Microsoft.Xna.Framework.Rectangle.$ctor2(0,224,32,32);this.Options=new Microsoft.Xna.Framework.Rectangle.$ctor2(32,224,32,32);this.MessageBox=new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,32,32)}}}});Bridge.define("CircuitCracker.TilePlacer",{fields:{wallColliders:null,modes:null,objectTypes:null,dirs:null,oppDirs:null,MousePosValid:!1,walls:null,levelMap:null,levelSize:null,wallSizeX:0,wallSizeY:0,wallsDirty:!1},ctors:{init:function(){this.levelSize=new Microsoft.Xna.Framework.Point;this.wallColliders=new(System.Collections.Generic.Stack$1(VelcroPhysics.Dynamics.Body).ctor);this.modes=System.Array.init([new CircuitCracker.PlacerMode(CircuitCracker.Mode.Wire,CircuitCracker.Sprites.None.$clone(),0,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Wire,CircuitCracker.Sprites.None.$clone(),1,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Wire,CircuitCracker.Sprites.None.$clone(),2,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Wire,CircuitCracker.Sprites.None.$clone(),3,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Gate,CircuitCracker.Sprites.Not.$clone(),1,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Gate,CircuitCracker.Sprites.And.$clone(),2,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Gate,CircuitCracker.Sprites.Or.$clone(),3,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Gate,CircuitCracker.Sprites.Xor.$clone(),4,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Gate,CircuitCracker.Sprites.Toggle.$clone(),5,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Wall,CircuitCracker.Sprites.Wall5.$clone(),0,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.Door0.$clone(),0,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.PlateActive.$clone(),1,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.CrateNormal.$clone(),2,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.CrateMetal.$clone(),9,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.PlayerWalking0.$clone(),3,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.InversePlayer.$clone(),10,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.Goal.$clone(),4,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.Conveyor.$clone(),5,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.SpikeActive.$clone(),6,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.Laser3.$clone(),7,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.DetectorActive.$clone(),8,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.TeleporterActive.$clone(),12,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.Robot.$clone(),13,!0,CircuitCracker.Sprites.RobotDecal.$clone()),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.RobotSensor.$clone(),16,!0,CircuitCracker.Sprites.RobotSensorDecal.$clone()),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.PistonBody.$clone(),14,!0),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.WinblockActive.$clone(),11,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.LevelLinkUnlocked.$clone(),15,!1),new CircuitCracker.PlacerMode(CircuitCracker.Mode.Object,CircuitCracker.Sprites.MessageBox.$clone(),17,!1)],CircuitCracker.PlacerMode);this.objectTypes=System.Array.init([CircuitCracker.LevelObjects.Door,CircuitCracker.LevelObjects.Plate,CircuitCracker.LevelObjects.Crate,CircuitCracker.LevelObjects.Player,CircuitCracker.LevelObjects.Goal,CircuitCracker.LevelObjects.Conveyor,CircuitCracker.LevelObjects.Spike,CircuitCracker.LevelObjects.Laser,CircuitCracker.LevelObjects.Detector,CircuitCracker.LevelObjects.Crate,CircuitCracker.LevelObjects.Player,CircuitCracker.LevelObjects.WinBlock,CircuitCracker.LevelObjects.Teleporter,CircuitCracker.LevelObjects.Robot,CircuitCracker.LevelObjects.Piston,CircuitCracker.LevelObjects.LevelLink,CircuitCracker.LevelObjects.RobotSensor,CircuitCracker.LevelObjects.MessageBox],Function);this.dirs=System.Array.create(0,[[0,-1],[1,0],[0,1],[-1,0]],System.Int32,4,2);this.oppDirs=System.Array.init([2,3,0,1],System.Int32)}},methods:{InitTilePlacer:function(levelMap,levelSize,menuItems){var $t,i,tile;for(this.levelMap=levelMap,this.levelSize=levelSize.$clone(),this.wallSizeX=levelSize.X+2|0,this.wallSizeY=levelSize.Y+2|0,this.walls=System.Array.create(0,null,System.Int32,this.wallSizeX,this.wallSizeY),this.InitWalls(),i=0;i<menuItems.length;i=i+1|0)this.SetWall(menuItems[i].pos.$clone(),!1);$t=Bridge.getEnumerator(levelMap);try{while($t.moveNext())tile=$t.Current,this.PlaceObject(tile,tile.objId,tile.objFacing),this.SetWall(tile.pos.$clone(),tile.wall)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.RebuildWallColliders()},ClearObjects:function(){var $t,tile;$t=Bridge.getEnumerator(this.levelMap);try{while($t.moveNext())tile=$t.Current,tile.DestroyObject()}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},Update:function(time){this.wallsDirty&&this.RebuildWallColliders()},GetObjectRect:function(id){for(var i=0;i<this.modes.length;i=i+1|0)if(this.modes[i].mode===CircuitCracker.Mode.Object&&this.modes[i].id===id)return this.modes[i].sprite.$clone();return Microsoft.Xna.Framework.Rectangle.Empty.$clone()},PlaceObject:function(tile,objId,facing){if(objId>=0&&objId<this.objectTypes.length){tile.objId=objId;tile.objFacing=facing;switch(objId){case 0:tile.obj=new CircuitCracker.LevelObjects.Door(tile,objId);break;case 1:tile.obj=new CircuitCracker.LevelObjects.Plate(tile,objId);break;case 2:tile.obj=new CircuitCracker.LevelObjects.Crate(tile,objId);break;case 3:tile.obj=new CircuitCracker.LevelObjects.Player(tile,objId);break;case 4:tile.obj=new CircuitCracker.LevelObjects.Goal(tile,objId);break;case 5:tile.obj=new CircuitCracker.LevelObjects.Conveyor(tile,objId);break;case 6:tile.obj=new CircuitCracker.LevelObjects.Spike(tile,objId);break;case 7:tile.obj=new CircuitCracker.LevelObjects.Laser(tile,objId);break;case 8:tile.obj=new CircuitCracker.LevelObjects.Detector(tile,objId);break;case 9:tile.obj=new CircuitCracker.LevelObjects.Crate(tile,objId);break;case 10:tile.obj=new CircuitCracker.LevelObjects.Player(tile,objId);break;case 11:tile.obj=new CircuitCracker.LevelObjects.WinBlock(tile,objId);break;case 12:tile.obj=new CircuitCracker.LevelObjects.Teleporter(tile,objId);break;case 13:tile.obj=new CircuitCracker.LevelObjects.Robot(tile,objId);break;case 14:tile.obj=new CircuitCracker.LevelObjects.Piston(tile,objId);break;case 15:tile.obj=new CircuitCracker.LevelObjects.LevelLink(tile,objId);break;case 16:tile.obj=new CircuitCracker.LevelObjects.RobotSensor(tile,objId);break;case 17:tile.obj=new CircuitCracker.LevelObjects.MessageBox(tile,objId);break}}return null},RebuildWallColliders:function(){var $t,col,mask,i,y,x,width,height,j,n,y1,x1,done,pos,b;$t=Bridge.getEnumerator(this.wallColliders);try{while($t.moveNext())col=$t.Current,CircuitCracker.Game.world.RemoveBody(col)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}for(this.wallColliders.Clear(),mask=System.Array.init(Bridge.Int.mul(this.wallSizeX,this.wallSizeY),!1,System.Boolean),i=0,y=0;y<this.wallSizeY;y=y+1|0)for(x=0;x<this.wallSizeX;x=x+1|0)mask[i]=this.walls.get([x,y])>=0,i=i+1|0;for(n=0,y1=0;y1<this.wallSizeY;y1=y1+1|0)for(x1=0;x1<this.wallSizeX;)if(mask[n]){for(width=1;mask[n+width|0]&&(x1+width|0)<this.wallSizeX;width=width+1|0);for(done=!1,height=1;(y1+height|0)<this.wallSizeY;height=height+1|0){for(i=0;i<width;i=i+1|0)if(!mask[(n+i|0)+Bridge.Int.mul(height,this.wallSizeX)|0]){done=!0;break}if(done)break}for(pos=new Microsoft.Xna.Framework.Vector2.$ctor2(x1+width/2-1.5,y1+height/2-1.5),b=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,width,height,1,pos.$clone(),0,VelcroPhysics.Dynamics.BodyType.Static,this),this.wallColliders.Push(b),j=0;j<height;j=j+1|0)for(i=0;i<width;i=i+1|0)mask[(n+i|0)+Bridge.Int.mul(j,this.wallSizeX)|0]=!1;x1=x1+width|0;n=n+width|0}else x1=x1+1|0,n=n+1|0;this.wallsDirty=!1},InitWalls:function(){for(var y,x=0;x<this.wallSizeX;x=x+1|0)for(y=0;y<this.wallSizeY;y=y+1|0)this.walls.set([x,y],-1);this.BuildRectangle(new Microsoft.Xna.Framework.Point.$ctor2(-1,-1),new Microsoft.Xna.Framework.Point.$ctor2(this.levelSize.X,this.levelSize.Y))},BuildRectangleFilled:function(a,b){for(var y,a1=new Microsoft.Xna.Framework.Point.$ctor2(Math.min(a.X,b.X),Math.min(a.Y,b.Y)),b1=new Microsoft.Xna.Framework.Point.$ctor2(Math.max(a.X,b.X),Math.max(a.Y,b.Y)),x=a1.X;x<=b1.X;x=x+1|0)for(y=a1.Y;y<=b1.Y;y=y+1|0)this.SetWall(new Microsoft.Xna.Framework.Point.$ctor2(x,y),!0)},BuildRectangle:function(a,b){Microsoft.Xna.Framework.Point.op_Equality(a.$clone(),b.$clone())?this.SetWall(a.$clone(),!0):(this.ConnectWithWalls(a.$clone(),b.$clone()),this.ConnectWithWalls(b.$clone(),a.$clone()))},ConnectWithWalls:function(a,b){if(a.X<b.X)while(a.X<b.X)this.SetWall(a.$clone(),!0),a.X=a.X+1|0;else while(a.X>b.X)this.SetWall(a.$clone(),!0),a.X=a.X-1|0;if(a.Y<b.Y)while(a.Y<b.Y)this.SetWall(a.$clone(),!0),a.Y=a.Y+1|0;else while(a.Y>b.Y)this.SetWall(a.$clone(),!0),a.Y=a.Y-1|0},SetWall:function(pos,setToWall){var currentId=this.walls.get([pos.X+1|0,pos.Y+1|0]),wall,i,x,y,tile;if((setToWall||currentId!==-1)&&(!setToWall||!(currentId>=0))){for(wall=setToWall?0:-1,i=0;i<4;i=i+1|0)x=(pos.X+1|0)+this.dirs.get([i,0])|0,y=(pos.Y+1|0)+this.dirs.get([i,1])|0,x>=0&&x<this.wallSizeX&&y>=0&&y<this.wallSizeY&&this.walls.get([x,y])>=0&&(setToWall?(wall=wall|1<<i,this.walls.set([x,y],this.walls.get([x,y])|1<<this.oppDirs[i])):this.walls.set([x,y],this.walls.get([x,y])&~(1<<this.oppDirs[i])));this.walls.set([pos.X+1|0,pos.Y+1|0],wall);pos.X>=0&&pos.X<this.levelSize.X&&pos.Y>=0&&pos.Y<this.levelSize.Y&&(tile=this.levelMap.get([pos.X,pos.Y]),tile.DestroyObject(),tile.wall=setToWall);this.wallsDirty=!0}}}});Bridge.define("CircuitCracker.Utilities",{statics:{methods:{Swap:function(T,a,b){var temp=a.v;a.v=b.v;b.v=temp},Clamp:function(value,min,max){return value<min?min:value>max?max:value},Clamp$1:function(value,min,max){return value<min?min:value>max?max:value},LoopValue:function(value,max){if(max===0)return 0;if(value>=max)return value-max|0;else if(value<0)return value+max|0;return value},ConstructOctogonal:function(x,y){x={v:x};y={v:y};x.v=Math.abs(x.v);y.v=Math.abs(y.v);x.v<y.v&&CircuitCracker.Utilities.Swap(System.Single,x,y);return System.Array.init([new Microsoft.Xna.Framework.Vector2.$ctor2(x.v,y.v),new Microsoft.Xna.Framework.Vector2.$ctor2(y.v,x.v),new Microsoft.Xna.Framework.Vector2.$ctor2(-y.v,x.v),new Microsoft.Xna.Framework.Vector2.$ctor2(-x.v,y.v),new Microsoft.Xna.Framework.Vector2.$ctor2(-x.v,-y.v),new Microsoft.Xna.Framework.Vector2.$ctor2(-y.v,-x.v),new Microsoft.Xna.Framework.Vector2.$ctor2(y.v,-x.v),new Microsoft.Xna.Framework.Vector2.$ctor2(x.v,-y.v)],Microsoft.Xna.Framework.Vector2)}}}});Bridge.define("CircuitCracker.WireLogic",{statics:{fields:{signalRange:0,nDirs:0},ctors:{init:function(){this.signalRange=1e3;this.nDirs=4}}},fields:{levelMap:null,dirs:null,oppDirs:null},ctors:{init:function(){this.dirs=System.Array.create(0,[[0,-1],[1,0],[0,1],[-1,0]],System.Int32,4,2);this.oppDirs=System.Array.init([2,3,0,1],System.Int32)}},methods:{InitWireLogic:function(levelMap){this.levelMap=levelMap},ResetLogic:function(){var $t,tile;if(this.levelMap!=null){$t=Bridge.getEnumerator(this.levelMap);try{while($t.moveNext())tile=$t.Current,System.Array.fill(tile.signalStrength,0,0,4)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},UpdateWires:function(){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7,tile,d,l,tile1,l1,tile2,d1,l2,tile3;$t=Bridge.getEnumerator(this.levelMap);try{while($t.moveNext())if(tile=$t.Current,tile.wire!==0)for(System.Array.fill(tile.minNearStrength,0,0,4),d=0;d<CircuitCracker.WireLogic.nDirs;d=d+1|0)if(l=tile.GetWireLayer(d),l!==-1){var x=tile.pos.$clone().X+this.dirs.get([d,0])|0,y=tile.pos.$clone().Y+this.dirs.get([d,1])|0,sigStr=($t1=this.levelMap.get([x,y]).signalStrength)[this.levelMap.get([x,y]).GetWireLayer(this.oppDirs[d])];sigStr!==0&&(tile.minNearStrength[l]===0||sigStr<tile.minNearStrength[l])&&(tile.minNearStrength[l]=sigStr)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}$t2=Bridge.getEnumerator(this.levelMap);try{while($t2.moveNext())if(tile1=$t2.Current,tile1.wire!==0){for(l1=0;l1<4;l1=l1+1|0)tile1.nextStrength[l1]=tile1.signalStrength[l1]>tile1.minNearStrength[l1]&&tile1.minNearStrength[l1]>0?tile1.minNearStrength[l1]+1|0:0;switch(tile1.gate){case CircuitCracker.Gate.Not:tile1.signalStrength[1]<=0&&(tile1.nextStrength[0]=1);break;case CircuitCracker.Gate.And:(tile1.signalStrength[1]>0||tile1.GetTmpLayer(1)===0)&&(tile1.signalStrength[2]>0||tile1.GetTmpLayer(2)===0)&&(tile1.signalStrength[3]>0||tile1.GetTmpLayer(3)===0)&&(tile1.nextStrength[0]=1);break;case CircuitCracker.Gate.Or:(tile1.signalStrength[1]>0||tile1.signalStrength[2]>0||tile1.signalStrength[3]>0)&&(tile1.nextStrength[0]=1);break;case CircuitCracker.Gate.Xor:tile1.signalStrength[1]>0!=tile1.signalStrength[2]>0!=tile1.signalStrength[3]>0&&(tile1.nextStrength[0]=1);break;case CircuitCracker.Gate.Toggle:tile1.signalStrength[0]===1&&(tile1.nextStrength[0]=1);break}tile1.source&&(tile1.nextStrength[0]=1,tile1.nextStrength[1]=1,tile1.nextStrength[2]=1,tile1.nextStrength[3]=1)}}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}$t3=Bridge.getEnumerator(this.levelMap);try{while($t3.moveNext())if(tile2=$t3.Current,tile2.wire!==0){for(d1=0;d1<CircuitCracker.WireLogic.nDirs;d1=d1+1|0)if(l2=tile2.GetWireLayer(d1),l2!==-1&&tile2.signalStrength[l2]===0&&tile2.nextStrength[l2]===0){var x1=tile2.pos.$clone().X+this.dirs.get([d1,0])|0,y1=tile2.pos.$clone().Y+this.dirs.get([d1,1])|0,dLayer=this.levelMap.get([x1,y1]).GetWireLayer(this.oppDirs[d1]);($t4=this.levelMap.get([x1,y1]).signalStrength)[dLayer]!==0&&($t5=this.levelMap.get([x1,y1]).signalStrength)[dLayer]===($t6=this.levelMap.get([x1,y1]).nextStrength)[dLayer]&&tile2.minNearStrength[l2]<CircuitCracker.WireLogic.signalRange&&(tile2.nextStrength[l2]=tile2.minNearStrength[l2]+1|0)}tile2.gate===CircuitCracker.Gate.Toggle&&tile2.signalStrength[1]===0&&tile2.nextStrength[1]!==0&&(tile2.nextStrength[0]=tile2.nextStrength[0]===1?0:1)}}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}$t7=Bridge.getEnumerator(this.levelMap);try{while($t7.moveNext())(tile3=$t7.Current,tile3.wire!==0)&&System.Array.copy(tile3.nextStrength,0,tile3.signalStrength,0,4)}finally{Bridge.is($t7,System.IDisposable)&&$t7.System$IDisposable$Dispose()}}}});Bridge.define("CircuitCracker.LevelButton",{inherits:[CircuitCracker.LevelObjects.IClickable,CircuitCracker.LevelObjects.IHoverable],fields:{pos:null,collider:null,sprite:null,tooltip:null,disabled:!1,hovering:!1,onClick:null,onEnter:null,onExit:null},alias:["OnClick","CircuitCracker$LevelObjects$IClickable$OnClick","OnMouseEnter","CircuitCracker$LevelObjects$IHoverable$OnMouseEnter","OnMouseExit","CircuitCracker$LevelObjects$IHoverable$OnMouseExit"],ctors:{init:function(){this.pos=new Microsoft.Xna.Framework.Point},ctor:function(pos,rect,tooltip,onClick,onEnter,onExit){onEnter===void 0&&(onEnter=null);onExit===void 0&&(onExit=null);this.$initialize();this.pos=pos.$clone();var p=new Microsoft.Xna.Framework.Vector2.$ctor2(pos.X,pos.Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,1,1,1,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Static,this);this.sprite=new CircuitCracker.Sprite.ctor(rect.$clone(),pos.$clone(),0,1);this.tooltip=tooltip;this.onClick=onClick;this.onEnter=onEnter;this.onExit=onExit}},methods:{SetSpriteRect:function(rect){this.sprite.rect=rect.$clone()},SetDisabled:function(disabled){this.disabled!==disabled&&(this.hovering&&(this.OnMouseExit(),this.disabled=disabled,this.OnMouseEnter()),this.disabled=disabled)},Destroy:function(){CircuitCracker.Game.world.RemoveBody(this.collider);this.sprite.Remove()},OnClick:function(){this.disabled||(Bridge.staticEquals(this.onClick,null)?null:this.onClick())},OnMouseEnter:function(){if(this.hovering=!0,this.disabled)Microsoft.Xna.Framework.Input.Mouse.SetCursor(Microsoft.Xna.Framework.Input.MouseCursor.No);else{if(Microsoft.Xna.Framework.Input.Mouse.SetCursor(Microsoft.Xna.Framework.Input.MouseCursor.Hand),this.sprite.color=Microsoft.Xna.Framework.Color.op_Multiply(this.sprite.color.$clone(),.5),this.tooltip!=null)var v=CircuitCracker.LevelRenderer.WorldToScreenPos(Microsoft.Xna.Framework.Vector2.op_Addition(this.pos.ToVector2(),new Microsoft.Xna.Framework.Vector2.$ctor2(-.5,.75)));Bridge.staticEquals(this.onEnter,null)?null:this.onEnter()}},OnMouseExit:function(){this.hovering=!1;Microsoft.Xna.Framework.Input.Mouse.SetCursor(Microsoft.Xna.Framework.Input.MouseCursor.Arrow);this.disabled||(this.sprite.color=Microsoft.Xna.Framework.Color.White.$clone(),this.tooltip!=null,Bridge.staticEquals(this.onExit,null)?null:this.onExit())}}});Bridge.define("CircuitCracker.LevelObjects.Conveyor",{inherits:[CircuitCracker.LevelObjects.LevelObject],statics:{fields:{speed:0,nSoundsActive:0},ctors:{init:function(){this.speed=1}}},fields:{moveables:null,direction:null,movedSprite:null,soundActive:!1},ctors:{init:function(){this.direction=new Microsoft.Xna.Framework.Vector2;this.movedSprite=new Microsoft.Xna.Framework.Rectangle;this.moveables=new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.Moveable).ctor)},ctor:function(placedOn,id){var r,p;this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.Conveyor.$clone());r=placedOn.objFacing*CircuitCracker.LevelObjects.LevelObject.facing2rad;this.direction=this.FacingDirection();p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,.6,.9,1,p.$clone(),r,VelcroPhysics.Dynamics.BodyType.Static);this.collider.IsSensor=!0;this.collider.addOnCollision(Bridge.fn.cacheBind(this,this.OnCollision));this.collider.addOnSeparation(Bridge.fn.cacheBind(this,this.OnSeparation));this.movedSprite=CircuitCracker.Sprites.Conveyor.$clone()}},methods:{Reset:function(){this.SoundOff();this.sprite.rect=CircuitCracker.Sprites.Conveyor.$clone();this.movedSprite=CircuitCracker.Sprites.Conveyor.$clone()},Destroy:function(){this.SoundOff();CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},FixedUpdate:function(){for(var $t,i=0;i<4;i=i+1|0)if(($t=this.placedOn.signalStrength)[i]!==0){this.Move();this.SoundOn();return}this.SoundOff()},Move:function(){var $t,m,y;$t=Bridge.getEnumerator(this.moveables);try{while($t.moveNext())m=$t.Current,m==null?this.moveables.remove(m):(m.conveyorDirection=Microsoft.Xna.Framework.Vector2.op_Addition(m.conveyorDirection.$clone(),this.direction.$clone()),Bridge.Int.clip32(m.position.X+.5)===this.placedOn.pos.$clone().X&&Bridge.Int.clip32(m.position.Y+.5)===this.placedOn.pos.$clone().Y&&(m.onActiveConveyor=!0))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}y=this.movedSprite.Y;y=y>=192?160:y+1|0;this.movedSprite.Y=y;this.sprite.rect=this.movedSprite.$clone()},OnCollision:function(fixtureA,fixtureB,contact){var moveable;(moveable=Bridge.as(fixtureB.Body.UserData,CircuitCracker.LevelObjects.Moveable))!=null&&this.moveables.add(moveable)},OnSeparation:function(fixtureA,fixtureB,contact){var moveable;(moveable=Bridge.as(fixtureB.Body.UserData,CircuitCracker.LevelObjects.Moveable))!=null&&this.moveables.remove(moveable)},SoundOn:function(){if(!this.soundActive){var volume=CircuitCracker.LevelObjects.Conveyor.nSoundsActive<64?.1+CircuitCracker.LevelObjects.Conveyor.nSoundsActive/80:.9;CircuitCracker.LevelObjects.Conveyor.nSoundsActive=CircuitCracker.LevelObjects.Conveyor.nSoundsActive+1|0;this.soundActive=!0}},SoundOff:function(){if(this.soundActive){var volume=CircuitCracker.LevelObjects.Conveyor.nSoundsActive<64?.1+CircuitCracker.LevelObjects.Conveyor.nSoundsActive/80:.9;CircuitCracker.LevelObjects.Conveyor.nSoundsActive=CircuitCracker.LevelObjects.Conveyor.nSoundsActive-1|0;CircuitCracker.LevelObjects.Conveyor.nSoundsActive===0;this.soundActive=!1}}}});Bridge.define("CircuitCracker.LevelObjects.Moveable",{inherits:[CircuitCracker.LevelObjects.LevelObject],statics:{fields:{speedModdifier:0,maxEffect:0},ctors:{init:function(){this.speedModdifier=1;this.maxEffect=16}}},fields:{position:null,conveyorDirection:null,onActiveConveyor:!1,defaultShader:0,callback:null,effect:0,x:0,y:0,radius:0},ctors:{init:function(){this.position=new Microsoft.Xna.Framework.Vector2;this.conveyorDirection=new Microsoft.Xna.Framework.Vector2},ctor:function(placedOn,id,rect){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,rect)}},methods:{SetTransform:function(pos,facing){this.SetTransform$1(new Microsoft.Xna.Framework.Vector2.$ctor2(pos.X,pos.Y),facing*CircuitCracker.LevelObjects.LevelObject.facing2rad)},SetTransform$1:function(position,rotation){this.position=position.$clone();this.collider.LinearVelocity=Microsoft.Xna.Framework.Vector2.Zero.$clone();this.collider.SetTransform(position.$clone(),rotation);this.sprite.position=position.$clone();this.sprite.rotation=rotation},Reset:function(){this.SetTransform(this.placedOn.pos.$clone(),this.placedOn.objFacing);this.collider.Enabled=!0;this.collider.Awake=!0;this.effect=0;this.sprite.color=Microsoft.Xna.Framework.Color.White.$clone();this.sprite.SetEnabled(!0);CircuitCracker.LevelObjects.LevelObject.prototype.Reset.call(this)},FixedUpdate:function(){if(this.effect>0){this.sprite.color=new Microsoft.Xna.Framework.Color.$ctor9(this.x,this.y,this.radius,1-this.effect/CircuitCracker.LevelObjects.Moveable.maxEffect);this.effect===CircuitCracker.LevelObjects.Moveable.maxEffect?this.collider.Enabled=!1:this.effect===1&&(this.enabled=!1,this.sprite.SetEnabled(!1));this.effect=this.effect-1|0;return}else if(this.effect<0){this.sprite.color=new Microsoft.Xna.Framework.Color.$ctor9(this.x,this.y,this.radius,1- -this.effect/CircuitCracker.LevelObjects.Moveable.maxEffect);this.effect===-1&&(Bridge.staticEquals(this.callback,null)?null:this.callback(),this.sprite.color=Microsoft.Xna.Framework.Color.White.$clone(),this.sprite.SetShader(this.defaultShader));this.effect=this.effect+1|0;return}this.onActiveConveyor&&(Microsoft.Xna.Framework.Vector2.op_Inequality(this.conveyorDirection.$clone(),Microsoft.Xna.Framework.Vector2.Zero.$clone())&&(this.conveyorDirection=Microsoft.Xna.Framework.Vector2.op_Multiply$1(Microsoft.Xna.Framework.Vector2.op_Multiply$1(Microsoft.Xna.Framework.Vector2.Normalize(this.conveyorDirection.$clone()),CircuitCracker.LevelObjects.Conveyor.speed),CircuitCracker.LevelObjects.Moveable.speedModdifier),this.collider.LinearVelocity=Microsoft.Xna.Framework.Vector2.op_Addition(this.collider.LinearVelocity.$clone(),this.conveyorDirection.$clone())),this.onActiveConveyor=!1);this.conveyorDirection=Microsoft.Xna.Framework.Vector2.Zero.$clone();this.position=this.collider.Position.$clone();this.sprite.position=this.position.$clone()},Dissolve:function(radius){this.effect=CircuitCracker.LevelObjects.Moveable.maxEffect;this.SetShaderParams(radius)},Materialize:function(radius,callback){callback===void 0&&(callback=null);this.effect=-16;this.SetShaderParams(radius,callback)},Teleport:function(radius){this.effect=CircuitCracker.LevelObjects.Moveable.maxEffect;this.SetShaderParams(radius)},SetShaderParams:function(radius,callback){callback===void 0&&(callback=null);this.x=this.sprite.rect.X/256;this.y=this.sprite.rect.Y/256;this.radius=radius;this.callback=callback}}});Bridge.define("CircuitCracker.LevelObjects.Detector",{inherits:[CircuitCracker.LevelObjects.LevelObject,CircuitCracker.LevelObjects.ILaserhitable],fields:{receivedThisTick:!1,active:!1},alias:["LaserHit","CircuitCracker$LevelObjects$ILaserhitable$LaserHit"],ctors:{ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.DetectorInactive.$clone());var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateCircle(CircuitCracker.Game.world,.2,1,p.$clone(),VelcroPhysics.Dynamics.BodyType.Static,this)}},methods:{Reset:function(){this.placedOn.source=!1;this.active=!1;this.sprite.rect=CircuitCracker.Sprites.DetectorInactive.$clone()},FixedUpdate:function(){this.receivedThisTick&&!this.active?(this.placedOn.source=!0,this.active=!0,this.sprite.rect=CircuitCracker.Sprites.DetectorActive.$clone()):this.active&&!this.receivedThisTick&&(this.placedOn.source=!1,this.active=!1,this.sprite.rect=CircuitCracker.Sprites.DetectorInactive.$clone());this.receivedThisTick=!1},LaserHit:function(){this.receivedThisTick=!0}}});Bridge.define("CircuitCracker.LevelObjects.Door",{inherits:[CircuitCracker.LevelObjects.LevelObject],statics:{fields:{doorSprites:null},ctors:{init:function(){this.doorSprites=System.Array.init([CircuitCracker.Sprites.Door0.$clone(),CircuitCracker.Sprites.Door1.$clone(),CircuitCracker.Sprites.Door2.$clone(),CircuitCracker.Sprites.Door3.$clone()],Microsoft.Xna.Framework.Rectangle)}}},fields:{sensor:null,doorState:0,nOfObjects:0,maxState:0,canClose:!1},ctors:{init:function(){this.canClose=!0},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.LevelObjects.Door.doorSprites[0]);this.maxState=CircuitCracker.LevelObjects.Door.doorSprites.length-1|0;var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,1,1,1,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Static,this);this.sensor=VelcroPhysics.Factories.BodyFactory.CreateCircle(CircuitCracker.Game.world,.3,1,p.$clone(),VelcroPhysics.Dynamics.BodyType.Static);this.sensor.IsSensor=!0;this.sensor.addOnCollision(Bridge.fn.cacheBind(this,this.OnCollision));this.sensor.addOnSeparation(Bridge.fn.cacheBind(this,this.OnSeparation))}},methods:{Reset:function(){this.collider.Enabled=!0;this.doorState=0;this.sprite.rect=CircuitCracker.LevelObjects.Door.doorSprites[0].$clone()},Destroy:function(){CircuitCracker.Game.world.RemoveBody(this.sensor);CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},FixedUpdate:function(){for(var $t,i=0;i<4;i=i+1|0)if(($t=this.placedOn.signalStrength)[i]!==0){this.doorState<this.maxState&&(this.doorState===0,this.collider.Enabled=!1,this.doorState=this.doorState+1|0,this.sprite.rect=CircuitCracker.LevelObjects.Door.doorSprites[this.doorState].$clone());return}this.doorState>0&&this.canClose&&(this.doorState===this.maxState,this.collider.Enabled=!0,this.doorState=this.doorState-1|0,this.sprite.rect=CircuitCracker.LevelObjects.Door.doorSprites[this.doorState].$clone())},OnCollision:function(fixtureA,fixtureB,contact){this.nOfObjects=this.nOfObjects+1|0;this.canClose=!1},OnSeparation:function(fixtureA,fixtureB,contact){this.nOfObjects=this.nOfObjects-1|0;this.nOfObjects<=0&&(this.canClose=!0)}}});Bridge.define("CircuitCracker.LevelObjects.Goal",{inherits:[CircuitCracker.LevelObjects.LevelObject],fields:{active:!1},ctors:{ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.Goal.$clone());CircuitCracker.LevelObjects.LevelObject.maxScore=CircuitCracker.LevelObjects.LevelObject.maxScore+1|0;var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateCircle(CircuitCracker.Game.world,.01,1,p.$clone(),VelcroPhysics.Dynamics.BodyType.Static);this.collider.IsSensor=!0;this.collider.addOnCollision(Bridge.fn.cacheBind(this,this.OnCollision));this.collider.addOnSeparation(Bridge.fn.cacheBind(this,this.OnSeparation))}},methods:{Destroy:function(){this.active&&(CircuitCracker.LevelObjects.LevelObject.score=CircuitCracker.LevelObjects.LevelObject.score-1|0,this.active=!1);CircuitCracker.LevelObjects.LevelObject.maxScore=CircuitCracker.LevelObjects.LevelObject.maxScore-1|0;CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},Reset:function(){CircuitCracker.LevelObjects.LevelObject.completed=!1;CircuitCracker.LevelObjects.LevelObject.prototype.Reset.call(this)},OnCollision:function(fixtureA,fixtureB,contact){var player;this.active||(player=Bridge.as(fixtureB.Body.UserData,CircuitCracker.LevelObjects.Player))==null||player.isInverse||(CircuitCracker.LevelObjects.LevelObject.score=CircuitCracker.LevelObjects.LevelObject.score+1|0,this.active=!0,this.CheckWin(!1))},OnSeparation:function(fixtureA,fixtureB,contact){var player;this.active&&(player=Bridge.as(fixtureB.Body.UserData,CircuitCracker.LevelObjects.Player))!=null&&(player.isInverse||(CircuitCracker.LevelObjects.LevelObject.score=CircuitCracker.LevelObjects.LevelObject.score-1|0,this.active=!1))}}});Bridge.define("CircuitCracker.LevelObjects.Laser",{inherits:[CircuitCracker.LevelObjects.LevelObject],statics:{fields:{laserSprites:null,powerIncreaseTicks:0,nSoundsActive:0},ctors:{init:function(){this.laserSprites=System.Array.init([CircuitCracker.Sprites.Laser0.$clone(),CircuitCracker.Sprites.Laser1.$clone(),CircuitCracker.Sprites.Laser2.$clone(),CircuitCracker.Sprites.Laser3.$clone()],Microsoft.Xna.Framework.Rectangle);this.powerIncreaseTicks=12;this.nSoundsActive=0}}},fields:{ticks:0,powerLevel:0,maxPowerLevel:0,active:!1,point1:null,point2:null,beamSprite:null,hitFixture:null,hitPoint:null,soundActive:!1},ctors:{init:function(){this.point1=new Microsoft.Xna.Framework.Vector2;this.point2=new Microsoft.Xna.Framework.Vector2;this.hitPoint=new Microsoft.Xna.Framework.Vector2;this.soundActive=!1},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.LevelObjects.Laser.laserSprites[0]);var r=placedOn.objFacing*CircuitCracker.LevelObjects.LevelObject.facing2rad,direction=this.FacingDirection(),p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.point1=Microsoft.Xna.Framework.Vector2.op_Addition(p.$clone(),Microsoft.Xna.Framework.Vector2.op_Multiply$1(direction.$clone(),.4));this.point2=Microsoft.Xna.Framework.Vector2.op_Addition(p.$clone(),Microsoft.Xna.Framework.Vector2.op_Multiply$1(direction.$clone(),40));this.collider=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,.4,.8,1,p.$clone(),r,VelcroPhysics.Dynamics.BodyType.Static,this);this.maxPowerLevel=CircuitCracker.LevelObjects.Laser.laserSprites.length-1|0;this.beamSprite=new CircuitCracker.Sprite.ctor(CircuitCracker.Sprites.Box.$clone(),placedOn.pos.$clone(),0,.75);this.beamSprite.color=Microsoft.Xna.Framework.Color.Red.$clone();this.beamSprite.SetEnabled(!1)}},methods:{Reset:function(){this.SoundOff();this.active=!1;this.ticks=0;this.powerLevel=0;this.sprite.rect=CircuitCracker.LevelObjects.Laser.laserSprites[0].$clone();this.beamSprite.SetEnabled(!1)},Destroy:function(){this.SoundOff();this.beamSprite.Remove();CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},FixedUpdate:function(){for(var $t,i=0;i<4;i=i+1|0)if(($t=this.placedOn.signalStrength)[i]!==0){this.powerLevel<this.maxPowerLevel?(this.ticks=this.ticks+1|0,this.ticks>=CircuitCracker.LevelObjects.Laser.powerIncreaseTicks&&(this.ticks=0,this.powerLevel=this.powerLevel+1|0,this.sprite.rect=CircuitCracker.LevelObjects.Laser.laserSprites[this.powerLevel].$clone(),this.powerLevel>=this.maxPowerLevel&&(this.SoundOn(),this.RaycastLaser()))):this.RaycastLaser();return}this.active&&(this.SoundOff(),this.active=!1,this.beamSprite.SetEnabled(!1));this.powerLevel>0&&(this.ticks=this.ticks-1|0,this.ticks<=0&&(this.ticks=CircuitCracker.LevelObjects.Laser.powerIncreaseTicks,this.powerLevel=this.powerLevel-1|0,this.sprite.rect=CircuitCracker.LevelObjects.Laser.laserSprites[this.powerLevel].$clone()))},RaycastLaser:function(){var p,laserhitable;this.active=!0;this.hitFixture=null;CircuitCracker.Game.world.RayCast$1(Bridge.fn.cacheBind(this,this.RayCastCallback),this.point1.$clone(),this.point2.$clone());this.hitFixture!=null&&(p=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.op_Addition(this.point1.$clone(),this.hitPoint.$clone()),2),this.beamSprite.SetEnabled(!0),this.beamSprite.position=p.$clone(),this.beamSprite.scale=new Microsoft.Xna.Framework.Vector2.$ctor2((Math.abs(this.point1.X-this.hitPoint.X)+.04)/32,(Math.abs(this.point1.Y-this.hitPoint.Y)+.04)/32),(laserhitable=Bridge.as(this.hitFixture.Body.UserData,CircuitCracker.LevelObjects.ILaserhitable))!=null&&laserhitable.CircuitCracker$LevelObjects$ILaserhitable$LaserHit())},RayCastCallback:function(fixture,point,normal,fraction){return fixture.IsSensor?-1:(this.hitFixture=fixture,this.hitPoint=point.$clone(),fraction)},SoundOn:function(){this.soundActive||(CircuitCracker.LevelObjects.Laser.nSoundsActive=CircuitCracker.LevelObjects.Laser.nSoundsActive+1|0,this.soundActive=!0)},SoundOff:function(){this.soundActive&&(CircuitCracker.LevelObjects.Laser.nSoundsActive=CircuitCracker.LevelObjects.Laser.nSoundsActive-1|0,CircuitCracker.LevelObjects.Laser.nSoundsActive===0,this.soundActive=!1)}}});Bridge.define("CircuitCracker.LevelObjects.LevelLink",{inherits:[CircuitCracker.LevelObjects.LevelObject],fields:{levelManager:null,button:null,positionId:0,locked:!1,hasCompleted:!1},ctors:{init:function(){this.locked=!0},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.None.$clone());this.levelManager=CircuitCracker.LevelManager.instance;this.positionId=placedOn.pos.$clone().Y+Bridge.Int.mul(placedOn.pos.$clone().X,this.levelManager.levelSize.$clone().Y)|0;this.hasCompleted=placedOn.objStorage>0;this.button=new CircuitCracker.LevelButton(placedOn.pos.$clone(),CircuitCracker.Sprites.LevelLinkLocked.$clone(),null,Bridge.fn.bind(this,function(){this.levelManager.LinkLoadLevel(this.positionId)}),Bridge.fn.bind(this,function(){this.levelManager.RenderThumbnail(placedOn.pos.$clone(),this.positionId)}),Bridge.fn.cacheBind(this.levelManager,this.levelManager.HideThumbnail));this.button.SetDisabled(!0);this.hasCompleted&&this.Complete()}},methods:{Destroy:function(){this.levelManager.RemoveLink(this.positionId);this.button.Destroy();CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},Complete:function(){this.button.SetSpriteRect(CircuitCracker.Sprites.LevelLinkComplete.$clone());this.button.SetDisabled(!1);this.locked=!1;this.placedOn.source=!0;this.hasCompleted=!0;this.placedOn.objStorage=1},Lock:function(){this.button.SetSpriteRect(CircuitCracker.Sprites.LevelLinkLocked.$clone());this.button.SetDisabled(!0);this.locked=!0;this.placedOn.source=!1;this.hasCompleted=!1;this.placedOn.objStorage=0},Unlock:function(){this.button.SetSpriteRect(CircuitCracker.Sprites.LevelLinkUnlocked.$clone());this.button.SetDisabled(!1);this.locked=!1},FixedUpdate:function(){var $t,i;if(!this.hasCompleted&&this.locked)for(i=0;i<4;i=i+1|0)if(($t=this.placedOn.signalStrength)[i]!==0){this.Unlock();return}}}});Bridge.define("CircuitCracker.LevelObjects.MessageBox",{inherits:[CircuitCracker.LevelObjects.LevelObject],fields:{button:null,locked:!1,messageQueued:!1,messages:null},ctors:{init:function(){this.locked=!0;this.messages=System.Array.init(["Click on a tile with a green arrow to play!","Use W,A,S,D or the arrow keys to move!\nPress space or shift to sprint.","Press R or the reset button to retart a level.","Join our discord to send us feedback, make requests and discuss solutions!\nYou can find the link in the settings.","Good Job on getting this far :)\nUpon completing all levels you can click the trophy to finish the section and unlock more content.","6","7","Congratulations, you completed the demo!\nThank you for playing!\nPlease consider sending us your statistics over on our discord server."],System.String)},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.None.$clone());this.button=new CircuitCracker.LevelButton(placedOn.pos.$clone(),CircuitCracker.Sprites.MessageBox.$clone(),null,Bridge.fn.cacheBind(this,this.ShowMessage));this.button.SetDisabled(!0)}},methods:{ShowMessage:function(){this.messageQueued=CircuitCracker.LevelRenderer.overlayAlpha>0;!this.messageQueued},Destroy:function(){this.button.Destroy();CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},FixedUpdate:function(){var $t,i;if(this.locked){for(i=0;i<4;i=i+1|0)if(($t=this.placedOn.signalStrength)[i]!==0){this.button.SetDisabled(!1);this.locked=!1;this.ShowMessage();return}}else this.messageQueued&&this.ShowMessage()}}});Bridge.define("CircuitCracker.LevelObjects.Piston",{inherits:[CircuitCracker.LevelObjects.LevelObject],statics:{fields:{motorSpeed:0,maxMotorForce:0},ctors:{init:function(){this.motorSpeed=4;this.maxMotorForce=100}}},fields:{headSprite:null,pistonHead:null,pistonJoint:null,active:!1},ctors:{ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.PistonBody.$clone());var axis=this.FacingDirection(),p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,1,1,1,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Static,this);this.pistonHead=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,.9375,.9375,1,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Dynamic,this);this.pistonJoint=VelcroPhysics.Factories.JointFactory.CreatePrismaticJoint(CircuitCracker.Game.world,this.collider,this.pistonHead,p.$clone(),axis.$clone());this.pistonJoint.LocalAnchorA=Microsoft.Xna.Framework.Vector2.Zero.$clone();this.pistonJoint.LocalAnchorB=Microsoft.Xna.Framework.Vector2.Zero.$clone();this.pistonJoint.CollideConnected=!1;this.pistonJoint.LimitEnabled=!0;this.pistonJoint.SetLimits(0,1);this.pistonJoint.MotorEnabled=!0;this.pistonJoint.MaxMotorForce=CircuitCracker.LevelObjects.Piston.maxMotorForce;this.pistonJoint.MotorSpeed=-4;this.sprite.SetSortOrder(.74);this.headSprite=new CircuitCracker.Sprite.ctor(CircuitCracker.Sprites.PistonHead.$clone(),placedOn.pos.$clone(),placedOn.objFacing,.75)}},methods:{Reset:function(){this.active=!1;this.pistonJoint.MotorSpeed=-4;var p=new Microsoft.Xna.Framework.Vector2.$ctor2(this.placedOn.pos.$clone().X,this.placedOn.pos.$clone().Y);this.pistonHead.Position=p.$clone();this.headSprite.position=p.$clone()},Destroy:function(){this.headSprite.Remove();CircuitCracker.Game.world.RemoveJoint(this.pistonJoint);CircuitCracker.Game.world.RemoveBody(this.pistonHead);CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},FixedUpdate:function(){var $t,i;for(this.headSprite.position=this.pistonHead.Position.$clone(),i=0;i<4;i=i+1|0)if(($t=this.placedOn.signalStrength)[i]!==0){this.active||(this.pistonJoint.MotorSpeed=CircuitCracker.LevelObjects.Piston.motorSpeed,this.active=!0);return}this.active&&(this.pistonJoint.MotorSpeed=-4,this.active=!1)}}});Bridge.define("CircuitCracker.LevelObjects.Plate",{inherits:[CircuitCracker.LevelObjects.LevelObject],fields:{nOfObjects:0},ctors:{ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.PlateInactive.$clone());var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateCircle(CircuitCracker.Game.world,.2,1,p.$clone(),VelcroPhysics.Dynamics.BodyType.Static);this.collider.IsSensor=!0;this.collider.addOnCollision(Bridge.fn.cacheBind(this,this.OnCollision));this.collider.addOnSeparation(Bridge.fn.cacheBind(this,this.OnSeparation))}},methods:{Reset:function(){this.placedOn.source=!1;this.sprite.rect=CircuitCracker.Sprites.PlateInactive.$clone()},OnCollision:function(fixtureA,fixtureB,contact){Bridge.is(fixtureB.Body.UserData,CircuitCracker.LevelObjects.Moveable)&&(this.nOfObjects===0&&(this.sprite.rect=CircuitCracker.Sprites.PlateActive.$clone(),this.placedOn.source=!0),this.nOfObjects=this.nOfObjects+1|0)},OnSeparation:function(fixtureA,fixtureB,contact){Bridge.is(fixtureB.Body.UserData,CircuitCracker.LevelObjects.Moveable)&&(this.nOfObjects=this.nOfObjects-1|0,this.nOfObjects===0&&(this.sprite.rect=CircuitCracker.Sprites.PlateInactive.$clone(),this.placedOn.source=!1))}}});Bridge.define("CircuitCracker.LevelObjects.RobotSensor",{inherits:[CircuitCracker.LevelObjects.LevelObject],statics:{fields:{robotSensors:null},ctors:{init:function(){this.robotSensors=System.Array.init([new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor).ctor),new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor).ctor),new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor).ctor),new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor).ctor),new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor).ctor),new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor).ctor),new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor).ctor),new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor).ctor)],System.Collections.Generic.List$1(CircuitCracker.LevelObjects.RobotSensor))}}},fields:{hitFixture:null,decal:null,point1:null,point2:null,receivedThisTick:!1,active:!1},ctors:{init:function(){this.point1=new Microsoft.Xna.Framework.Vector2;this.point2=new Microsoft.Xna.Framework.Vector2},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.RobotSensor.$clone());var r=placedOn.objFacing*CircuitCracker.LevelObjects.LevelObject.facing2rad,direction=this.FacingDirection(),p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.point1=Microsoft.Xna.Framework.Vector2.op_Addition(p.$clone(),Microsoft.Xna.Framework.Vector2.op_Multiply$1(direction.$clone(),.4));this.point2=Microsoft.Xna.Framework.Vector2.op_Addition(p.$clone(),direction.$clone());this.collider=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,.8,.8,1,p.$clone(),r,VelcroPhysics.Dynamics.BodyType.Static,this);this.decal=new CircuitCracker.Sprite.ctor(CircuitCracker.Sprites.RobotSensorDecal.$clone(),placedOn.pos.$clone(),placedOn.objFacing,1);this.decal.color=CircuitCracker.LevelRenderer.colors[placedOn.GetObjectColor()].$clone();CircuitCracker.LevelObjects.RobotSensor.robotSensors[placedOn.objStorage].add(this)}},methods:{Reset:function(){this.placedOn.source=!1},Destroy:function(){this.decal.Remove();CircuitCracker.LevelObjects.RobotSensor.robotSensors[this.placedOn.objStorage].remove(this);CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},FixedUpdate:function(){this.hitFixture=null;CircuitCracker.Game.world.RayCast$1(Bridge.fn.cacheBind(this,this.RayCastCallback),this.point1.$clone(),this.point2.$clone());this.receivedThisTick&&!this.active?(this.placedOn.source=!0,this.active=!0):this.active&&!this.receivedThisTick&&(this.placedOn.source=!1,this.active=!1);this.receivedThisTick=!1},SetActive:function(){this.receivedThisTick=!0},RayCastCallback:function(fixture,point,normal,fraction){return fixture.IsSensor?-1:(this.hitFixture=fixture,fraction)}}});Bridge.define("CircuitCracker.LevelObjects.Spike",{inherits:[CircuitCracker.LevelObjects.LevelObject],fields:{touchingBodies:null,active:!1},ctors:{init:function(){this.touchingBodies=new(System.Collections.Generic.List$1(VelcroPhysics.Dynamics.Body).ctor)},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.SpikeInactive.$clone());var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateCircle(CircuitCracker.Game.world,.2,1,p.$clone(),VelcroPhysics.Dynamics.BodyType.Static);this.collider.IsSensor=!0;this.collider.addOnCollision(Bridge.fn.cacheBind(this,this.OnCollision));this.collider.addOnSeparation(Bridge.fn.cacheBind(this,this.OnSeparation))}},methods:{Reset:function(){this.active=!1;this.sprite.rect=CircuitCracker.Sprites.SpikeInactive.$clone();this.touchingBodies.clear()},FixedUpdate:function(){var $t,i,j,b,damageable;if(!this.active)for(i=0;i<4;i=i+1|0)if(($t=this.placedOn.signalStrength)[i]!==0){for(this.active=!0,this.sprite.rect=CircuitCracker.Sprites.SpikeActive.$clone(),j=0;j<this.touchingBodies.Count;j=j+1|0)b=this.touchingBodies.getItem(j),(damageable=Bridge.as(b.UserData,CircuitCracker.LevelObjects.IDamageable))!=null&&damageable.CircuitCracker$LevelObjects$IDamageable$Damage();this.touchingBodies.clear();return}},OnCollision:function(fixtureA,fixtureB,contact){if(this.active){var damageable;(damageable=Bridge.as(fixtureB.Body.UserData,CircuitCracker.LevelObjects.IDamageable))!=null&&(damageable.CircuitCracker$LevelObjects$IDamageable$Damage(),this.active=!1,this.sprite.rect=CircuitCracker.Sprites.SpikeInactive.$clone())}else this.touchingBodies.add(fixtureB.Body)},OnSeparation:function(fixtureA,fixtureB,contact){this.active||this.touchingBodies.remove(fixtureB.Body)}}});Bridge.define("CircuitCracker.LevelObjects.Teleporter",{inherits:[CircuitCracker.LevelObjects.LevelObject],statics:{fields:{maxTeleporterCount:0,teleporters:null,teleporting:null},ctors:{init:function(){this.maxTeleporterCount=16;this.teleporters=new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.Teleporter).ctor);this.teleporting=new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.ITeleportable).ctor)}}},fields:{teleported:null,touchingBodies:null,nOftouchingPrev:0,nOfObjectsDetector:0,objectDetector:null,powered:!1,poweredPrev:!1,blocked:!1,updated:!1},ctors:{init:function(){this.teleported=new(System.Collections.Generic.List$1(CircuitCracker.LevelObjects.Moveable).ctor);this.touchingBodies=new(System.Collections.Generic.List$1(VelcroPhysics.Dynamics.Body).ctor)},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.TeleporterInactive.$clone());CircuitCracker.LevelObjects.Teleporter.teleporters.Count===CircuitCracker.LevelObjects.Teleporter.maxTeleporterCount&&CircuitCracker.LevelObjects.Teleporter.teleporters.getItem(0).placedOn.DestroyObject();CircuitCracker.LevelObjects.Teleporter.teleporters.add(this);var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y);this.collider=VelcroPhysics.Factories.BodyFactory.CreateCircle(CircuitCracker.Game.world,.185,1,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Static);this.collider.IsSensor=!0;this.collider.addOnCollision(Bridge.fn.cacheBind(this,this.OnCollision));this.collider.addOnSeparation(Bridge.fn.cacheBind(this,this.OnSeparation));this.objectDetector=VelcroPhysics.Factories.BodyFactory.CreateRectangle(CircuitCracker.Game.world,.9,.9,1,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Static);this.objectDetector.IsSensor=!0;this.objectDetector.addOnCollision(Bridge.fn.cacheBind(this,this.OnCollisionDetector));this.objectDetector.addOnSeparation(Bridge.fn.cacheBind(this,this.OnSeparationDetector))}},methods:{Destroy:function(){var $t,obj;$t=Bridge.getEnumerator(this.teleported);try{while($t.moveNext())obj={v:Bridge.cast($t.Current,CircuitCracker.LevelObjects.LevelObject)},obj.v!=null?obj.v.Destroy():null}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}CircuitCracker.LevelObjects.Teleporter.teleporters.remove(this);CircuitCracker.Game.world.RemoveBody(this.objectDetector);CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},Reset:function(){var $t,obj;$t=Bridge.getEnumerator(this.teleported);try{while($t.moveNext())obj={v:Bridge.cast($t.Current,CircuitCracker.LevelObjects.LevelObject)},obj.v!=null?obj.v.Destroy():null}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.teleported.clear();this.powered=!1;this.sprite.rect=CircuitCracker.Sprites.TeleporterInactive.$clone()},FixedUpdate:function(){for(var obj,i1,obj1,update2,teleporter,teleIdx,teleporter1,toTele,obj2,teleporter2,$t,$t1,$t2,$t3,i=this.teleported.Count-1|0;i>=0;i=i-1|0)obj=this.teleported.getItem(i),obj.enabled?obj.FixedUpdate():(this.teleported.removeAt(i),obj.Destroy());for(this.poweredPrev=this.powered,this.powered=!1,i1=0;i1<4;i1=i1+1|0)if(($t=this.placedOn.signalStrength)[i1]!==0){this.powered=!0;this.sprite.rect=CircuitCracker.Sprites.TeleporterActive.$clone();break}this.powered&&this.nOfObjectsDetector!==0||(this.blocked=!1);(!this.powered||this.blocked)&&(this.sprite.rect=CircuitCracker.Sprites.TeleporterInactive.$clone());this.touchingBodies.Count!==1||!this.powered||this.poweredPrev&&this.nOftouchingPrev!==0||this.blocked||(this.blocked=!0,(obj1=Bridge.as(this.touchingBodies.getItem(0).UserData,CircuitCracker.LevelObjects.ITeleportable))!=null&&(CircuitCracker.LevelObjects.Teleporter.teleporting.add(obj1),obj1.CircuitCracker$LevelObjects$ITeleportable$TeleportRemove()));this.updated=!0;update2=!0;$t1=Bridge.getEnumerator(CircuitCracker.LevelObjects.Teleporter.teleporters);try{while($t1.moveNext())if(teleporter=$t1.Current,!teleporter.updated){update2=!1;break}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}if(update2){if(CircuitCracker.LevelObjects.Teleporter.teleporting.Count>0){teleIdx=0;$t2=Bridge.getEnumerator(CircuitCracker.LevelObjects.Teleporter.teleporters);try{while($t2.moveNext())teleporter1=$t2.Current,teleporter1.powered&&!teleporter1.blocked&&(toTele=Bridge.as(CircuitCracker.LevelObjects.Teleporter.teleporting.getItem(teleIdx),CircuitCracker.LevelObjects.Moveable),obj2=Bridge.cast(Bridge.createInstance(Bridge.getType(toTele),[toTele.placedOn,toTele.id]),CircuitCracker.LevelObjects.Moveable),obj2.SetTransform(teleporter1.placedOn.pos.$clone(),toTele.placedOn.objFacing),this.teleported.add(obj2),Bridge.cast(obj2,CircuitCracker.LevelObjects.ITeleportable).CircuitCracker$LevelObjects$ITeleportable$TeleportAdd(),teleporter1.blocked=!0,teleIdx=CircuitCracker.Utilities.LoopValue(teleIdx+1|0,CircuitCracker.LevelObjects.Teleporter.teleporting.Count))}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}CircuitCracker.LevelObjects.Teleporter.teleporting.clear()}$t3=Bridge.getEnumerator(CircuitCracker.LevelObjects.Teleporter.teleporters);try{while($t3.moveNext())teleporter2=$t3.Current,teleporter2.nOftouchingPrev=teleporter2.touchingBodies.Count,teleporter2.updated=!1}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}}},OnCollision:function(fixtureA,fixtureB,contact){this.touchingBodies.add(fixtureB.Body)},OnSeparation:function(fixtureA,fixtureB,contact){this.touchingBodies.remove(fixtureB.Body)},OnCollisionDetector:function(fixtureA,fixtureB,contact){this.nOfObjectsDetector=this.nOfObjectsDetector+1|0},OnSeparationDetector:function(fixtureA,fixtureB,contact){this.nOfObjectsDetector=this.nOfObjectsDetector-1|0}}});Bridge.define("CircuitCracker.LevelObjects.WinBlock",{inherits:[CircuitCracker.LevelObjects.LevelObject],fields:{button:null,active:!1},ctors:{ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.LevelObject.ctor.call(this,placedOn,id,CircuitCracker.Sprites.None.$clone());this.button=new CircuitCracker.LevelButton(placedOn.pos.$clone(),CircuitCracker.Sprites.WinblockInactive.$clone(),null,Bridge.fn.bind(this,function(){this.CheckWin(!0)}));this.button.SetDisabled(!0);CircuitCracker.LevelObjects.LevelObject.nWinBlocks=CircuitCracker.LevelObjects.LevelObject.nWinBlocks+1|0;CircuitCracker.LevelObjects.LevelObject.maxScore=CircuitCracker.LevelObjects.LevelObject.maxScore+1|0}},methods:{Destroy:function(){this.active&&(CircuitCracker.LevelObjects.LevelObject.score=CircuitCracker.LevelObjects.LevelObject.score-1|0,this.active=!1);CircuitCracker.LevelObjects.LevelObject.maxScore=CircuitCracker.LevelObjects.LevelObject.maxScore-1|0;CircuitCracker.LevelObjects.LevelObject.nWinBlocks=CircuitCracker.LevelObjects.LevelObject.nWinBlocks-1|0;this.placedOn.source=!1;this.button.Destroy();CircuitCracker.LevelObjects.LevelObject.prototype.Destroy.call(this)},Reset:function(){CircuitCracker.LevelObjects.LevelObject.completed=!1;this.placedOn.source=!1;this.button.SetDisabled(!0);this.button.SetSpriteRect(CircuitCracker.Sprites.WinblockInactive.$clone())},FixedUpdate:function(){var $t,i;if(!this.placedOn.source){for(i=0;i<4;i=i+1|0)if(($t=this.placedOn.signalStrength)[i]!==0){this.active||(CircuitCracker.LevelObjects.LevelObject.score=CircuitCracker.LevelObjects.LevelObject.score+1|0,this.active=!0,this.CheckWin(!1));CircuitCracker.LevelObjects.LevelObject.completed&&(this.placedOn.source=!0,this.button.SetDisabled(!1),this.button.SetSpriteRect(CircuitCracker.Sprites.WinblockActive.$clone()));return}this.active&&(CircuitCracker.LevelObjects.LevelObject.score=CircuitCracker.LevelObjects.LevelObject.score-1|0,this.active=!1)}}}});Bridge.define("CircuitCracker.LevelObjects.Crate",{inherits:[CircuitCracker.LevelObjects.Moveable,CircuitCracker.LevelObjects.IDamageable,CircuitCracker.LevelObjects.ILaserhitable,CircuitCracker.LevelObjects.ITeleportable],fields:{isMetal:!1},alias:["Damage","CircuitCracker$LevelObjects$IDamageable$Damage","LaserHit","CircuitCracker$LevelObjects$ILaserhitable$LaserHit","TeleportAdd","CircuitCracker$LevelObjects$ITeleportable$TeleportAdd","TeleportRemove","CircuitCracker$LevelObjects$ITeleportable$TeleportRemove"],ctors:{ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.Moveable.ctor.call(this,placedOn,id,id!==2?CircuitCracker.Sprites.CrateMetal.$clone():CircuitCracker.Sprites.CrateNormal.$clone());this.isMetal=id!==2;var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y),vertices=new VelcroPhysics.Shared.Vertices.$ctor1(CircuitCracker.Utilities.ConstructOctogonal(.48,.32));this.collider=VelcroPhysics.Factories.BodyFactory.CreatePolygon(CircuitCracker.Game.world,vertices,this.isMetal?1.2:.6,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Dynamic,this);this.collider.LinearDamping=25;this.collider.Friction=0;this.collider.FixedRotation=!0;this.sprite.SetSortOrder(.76)}},methods:{Damage:function(){this.Dissolve(.4)},LaserHit:function(){this.isMetal||this.Damage()},TeleportAdd:function(){this.Materialize(.4)},TeleportRemove:function(){this.Teleport(.4)}}});Bridge.define("CircuitCracker.LevelObjects.Player",{inherits:[CircuitCracker.LevelObjects.Moveable,CircuitCracker.LevelObjects.IDamageable,CircuitCracker.LevelObjects.ILaserhitable,CircuitCracker.LevelObjects.ITeleportable],statics:{fields:{walking:null,pushing:null,speed:0,stepDistance:0},ctors:{init:function(){this.walking=System.Array.init([CircuitCracker.Sprites.PlayerWalking0.$clone(),CircuitCracker.Sprites.PlayerWalking1.$clone()],Microsoft.Xna.Framework.Rectangle);this.pushing=System.Array.init([CircuitCracker.Sprites.PlayerPushing0.$clone(),CircuitCracker.Sprites.PlayerPushing1.$clone()],Microsoft.Xna.Framework.Rectangle);this.speed=131;this.stepDistance=.2}}},fields:{isInverse:!1,hitFixture:null,lastAnimationPos:null,currentSprite:0,lastFlipped:!1,isWalking:!1,canWalk:!1},alias:["Damage","CircuitCracker$LevelObjects$IDamageable$Damage","LaserHit","CircuitCracker$LevelObjects$ILaserhitable$LaserHit","TeleportAdd","CircuitCracker$LevelObjects$ITeleportable$TeleportAdd","TeleportRemove","CircuitCracker$LevelObjects$ITeleportable$TeleportRemove"],ctors:{init:function(){this.lastAnimationPos=new Microsoft.Xna.Framework.Vector2;this.canWalk=!0},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.Moveable.ctor.call(this,placedOn,id,CircuitCracker.LevelObjects.Player.walking[0]);id!==3&&(this.isInverse=!0,this.defaultShader=CircuitCracker.Shader.Invert,this.sprite.effects|=Microsoft.Xna.Framework.Graphics.SpriteEffects.FlipVertically);var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y),vertices=new VelcroPhysics.Shared.Vertices.$ctor1(CircuitCracker.Utilities.ConstructOctogonal(.35,.18));this.collider=VelcroPhysics.Factories.BodyFactory.CreatePolygon(CircuitCracker.Game.world,vertices,1.53262377,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Dynamic,this);this.collider.LinearDamping=25;this.collider.Friction=0;this.collider.FixedRotation=!0;this.sprite.SetSortOrder(.75)}},methods:{Reset:function(){this.canWalk=!0;CircuitCracker.LevelObjects.Moveable.prototype.Reset.call(this)},FixedUpdate:function(){var x,y,movedir;(CircuitCracker.LevelObjects.Moveable.prototype.FixedUpdate.call(this),this.canWalk)&&(x=CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.A)||CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.Left)?-1:0,x+=(CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.D)||CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.Right)?1:0)|0,y=CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.W)||CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.Up)?-1:0,y+=(CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.S)||CircuitCracker.Input.GetButton(Microsoft.Xna.Framework.Input.Keys.Down)?1:0)|0,x!==0||y!==0?(this.isWalking=!0,movedir=new Microsoft.Xna.Framework.Vector2.$ctor2(x,y),movedir.Normalize(),this.collider.ApplyForce(Microsoft.Xna.Framework.Vector2.op_Multiply$1(Microsoft.Xna.Framework.Vector2.op_Multiply$1(Microsoft.Xna.Framework.Vector2.op_Multiply$1(movedir.$clone(),CircuitCracker.LevelObjects.Moveable.speedModdifier),CircuitCracker.LevelObjects.Player.speed),this.id!==3?-1:1)),this.sprite.rotation=Math.acos(-movedir.Y)*(movedir.X<0?-1:1),Microsoft.Xna.Framework.Vector2.op_Subtraction(this.collider.Position.$clone(),this.lastAnimationPos.$clone()).LengthSquared()>=CircuitCracker.LevelObjects.Player.stepDistance&&(this.lastAnimationPos=this.collider.Position.$clone(),this.currentSprite=this.currentSprite+1|0,this.currentSprite===1&&(this.lastFlipped?this.sprite.effects&=-2:this.sprite.effects|=Microsoft.Xna.Framework.Graphics.SpriteEffects.FlipHorizontally,this.lastFlipped=!this.lastFlipped),this.hitFixture=null,CircuitCracker.Game.world.RayCast$1(Bridge.fn.cacheBind(this,this.RayCastCallback),this.collider.Position.$clone(),Microsoft.Xna.Framework.Vector2.op_Addition(this.collider.Position.$clone(),Microsoft.Xna.Framework.Vector2.op_Multiply$1(movedir.$clone(),Bridge.Int.sign(CircuitCracker.LevelObjects.Player.speed)))),this.hitFixture!=null&&Bridge.is(this.hitFixture.Body.UserData,CircuitCracker.LevelObjects.Crate)?(this.currentSprite>=CircuitCracker.LevelObjects.Player.pushing.length&&(this.currentSprite=0),this.sprite.rect=CircuitCracker.LevelObjects.Player.pushing[this.currentSprite].$clone()):(this.currentSprite>=CircuitCracker.LevelObjects.Player.walking.length&&(this.currentSprite=0),this.sprite.rect=CircuitCracker.LevelObjects.Player.walking[this.currentSprite].$clone()))):this.isWalking&&(this.isWalking=!1,this.sprite.rect=CircuitCracker.LevelObjects.Player.walking[0].$clone(),this.currentSprite=0),this.collider.LinearDamping=this.isWalking?36:25)},RayCastCallback:function(fixture,point,normal,fraction){return this.hitFixture=fixture,fraction},Damage:function(){this.canWalk=!1;this.Dissolve(.25)},LaserHit:function(){this.Damage()},TeleportAdd:function(){this.canWalk=!1;this.Materialize(.25,Bridge.fn.bind(this,function(){this.canWalk=!0}))},TeleportRemove:function(){this.canWalk=!1;this.Teleport(.25)}}});Bridge.define("CircuitCracker.LevelObjects.Robot",{inherits:[CircuitCracker.LevelObjects.Moveable,CircuitCracker.LevelObjects.IDamageable,CircuitCracker.LevelObjects.ILaserhitable,CircuitCracker.LevelObjects.ITeleportable],statics:{fields:{speed:0},ctors:{init:function(){this.speed=50}}},fields:{baseSprite:null,decal:null,hitFixture:null,lookDir:null,canWalk:!1,iForward:0,iTurnRight:0,lastTurnRight:!1,iTurnAround:0,lastTurnAround:!1,iTurnLeft:0,lastTurnLeft:!1},alias:["Damage","CircuitCracker$LevelObjects$IDamageable$Damage","LaserHit","CircuitCracker$LevelObjects$ILaserhitable$LaserHit","TeleportAdd","CircuitCracker$LevelObjects$ITeleportable$TeleportAdd","TeleportRemove","CircuitCracker$LevelObjects$ITeleportable$TeleportRemove"],ctors:{init:function(){this.lookDir=new Microsoft.Xna.Framework.Vector2;this.canWalk=!0},ctor:function(placedOn,id){this.$initialize();CircuitCracker.LevelObjects.Moveable.ctor.call(this,placedOn,id,CircuitCracker.Sprites.Robot.$clone());this.lookDir=this.FacingDirection();this.iForward=Bridge.Int.div(placedOn.objFacing,2)|0;this.iTurnRight=(this.iForward+1|0)%4;this.iTurnAround=(this.iForward+2|0)%4;this.iTurnLeft=(this.iForward+3|0)%4;var p=new Microsoft.Xna.Framework.Vector2.$ctor2(placedOn.pos.$clone().X,placedOn.pos.$clone().Y),vertices=new VelcroPhysics.Shared.Vertices.$ctor1(CircuitCracker.Utilities.ConstructOctogonal(.3,.25));this.collider=VelcroPhysics.Factories.BodyFactory.CreatePolygon(CircuitCracker.Game.world,vertices,2,p.$clone(),0,VelcroPhysics.Dynamics.BodyType.Dynamic,this);this.collider.LinearDamping=25;this.collider.Friction=0;this.collider.FixedRotation=!0;this.collider.addOnCollision(Bridge.fn.cacheBind(this,this.OnCollision));this.sprite.SetSortOrder(.74);this.decal=new CircuitCracker.Sprite.ctor(CircuitCracker.Sprites.RobotDecal.$clone(),placedOn.pos.$clone(),placedOn.objFacing,.74);this.decal.color=CircuitCracker.LevelRenderer.colors[placedOn.GetObjectColor()].$clone();this.baseSprite=new CircuitCracker.Sprite.ctor(CircuitCracker.Sprites.RobotBase.$clone(),placedOn.pos.$clone(),placedOn.objFacing,1)}},methods:{Destroy:function(){this.baseSprite.Remove();this.decal.Remove();CircuitCracker.LevelObjects.Moveable.prototype.Destroy.call(this)},SetTransform$1:function(position,rotation){this.decal.position=position.$clone();this.decal.rotation=rotation;CircuitCracker.LevelObjects.Moveable.prototype.SetTransform$1.call(this,position.$clone(),rotation)},Reset:function(){this.canWalk=!0;this.decal.SetEnabled(!0);this.lookDir=this.FacingDirection();CircuitCracker.LevelObjects.Moveable.prototype.Reset.call(this)},FixedUpdate:function(){var $t,$t1,$t2,$t3,$t4,rotate,layer,active,active1,active2,sensor,sensorFixture;if(CircuitCracker.LevelObjects.Moveable.prototype.FixedUpdate.call(this),this.decal.position=this.sprite.position.$clone(),this.decal.rotation=this.sprite.rotation,this.canWalk){rotate=0;layer=this.placedOn.GetWireLayer(this.iTurnRight);layer>=0&&(active=($t=this.placedOn.signalStrength)[layer]>0,active&&!this.lastTurnRight&&(rotate=rotate+1|0),this.lastTurnRight=active);layer=this.placedOn.GetWireLayer(this.iTurnAround);layer>=0&&(active1=($t1=this.placedOn.signalStrength)[layer]>0,active1&&!this.lastTurnAround&&(rotate=rotate+2|0),this.lastTurnAround=active1);layer=this.placedOn.GetWireLayer(this.iTurnLeft);layer>=0&&(active2=($t2=this.placedOn.signalStrength)[layer]>0,active2&&!this.lastTurnLeft&&(rotate=rotate+3|0),this.lastTurnLeft=active2);rotate!==0&&(this.lookDir=Microsoft.Xna.Framework.Vector2.Transform(this.lookDir.$clone(),Microsoft.Xna.Framework.Matrix.CreateRotationZ(Bridge.Int.mul(2,rotate)*CircuitCracker.LevelObjects.LevelObject.facing2rad)),this.lookDir.Normalize(),this.sprite.rotation=Math.acos(-this.lookDir.Y)*(this.lookDir.X<0?-1:1));layer=this.placedOn.GetWireLayer(this.iForward);layer>=0&&($t3=this.placedOn.signalStrength)[layer]>0&&this.collider.ApplyForce(Microsoft.Xna.Framework.Vector2.op_Multiply$1(this.lookDir.$clone(),CircuitCracker.LevelObjects.Robot.speed));this.hitFixture=null;CircuitCracker.Game.world.RayCast$1(Bridge.fn.cacheBind(this,this.RayCastCallback),this.collider.Position.$clone(),Microsoft.Xna.Framework.Vector2.op_Addition(this.collider.Position.$clone(),Microsoft.Xna.Framework.Vector2.op_Multiply$1(this.lookDir.$clone(),.65)));$t4=Bridge.getEnumerator(CircuitCracker.LevelObjects.RobotSensor.robotSensors[this.placedOn.objStorage]);try{while($t4.moveNext())sensor=$t4.Current,sensorFixture=sensor.hitFixture,sensorFixture==null&&this.hitFixture==null?sensor.SetActive():sensorFixture!=null&&this.hitFixture!=null&&Bridge.referenceEquals(Bridge.getType(sensorFixture.Body.UserData),Bridge.getType(this.hitFixture.Body.UserData))&&sensor.SetActive()}finally{Bridge.is($t4,System.IDisposable)&&$t4.System$IDisposable$Dispose()}}},Damage:function(){this.canWalk=!1;this.decal.SetEnabled(!1);this.Dissolve(.25)},LaserHit:function(){this.Damage()},TeleportAdd:function(){this.canWalk=!1;this.decal.SetEnabled(!1);this.Materialize(.25,Bridge.fn.bind(this,function(){this.canWalk=!0;this.decal.SetEnabled(!0)}))},TeleportRemove:function(){this.canWalk=!1;this.decal.SetEnabled(!1);this.Teleport(.25)},OnCollision:function(fixtureA,fixtureB,contact){var player;(player=Bridge.as(fixtureB.Body.UserData,CircuitCracker.LevelObjects.Player))!=null&&player.Damage()},RayCastCallback:function(fixture,point,normal,fraction){return fixture.IsSensor?-1:(this.hitFixture=fixture,fraction)}}})});